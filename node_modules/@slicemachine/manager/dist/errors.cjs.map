{"version":3,"file":"errors.cjs","sources":["../../src/errors.ts"],"sourcesContent":["import { HookError } from \"@slicemachine/plugin-kit\";\n\nexport class SliceMachineError extends Error {\n\t_sliceMachineError = true;\n\tname = \"SliceMachineError\";\n}\nexport class UnauthorizedError extends SliceMachineError {\n\tname = \"UnauthorizedError\";\n}\nexport class UnauthenticatedError extends SliceMachineError {\n\tname = \"UnauthenticatedError\";\n\tmessage = \"Authenticate before trying again.\";\n}\nexport class NotFoundError extends SliceMachineError {\n\tname = \"NotFoundError\";\n}\nexport class UnexpectedDataError extends SliceMachineError {\n\tname = \"UnexpectedDataError\";\n}\nexport class InternalError extends SliceMachineError {\n\tname = \"InternalError\";\n}\nexport class PluginError extends SliceMachineError {\n\tname = \"PluginError\";\n}\nexport class PluginHookResultError extends SliceMachineError {\n\tname = \"PluginHookResultError\";\n\n\tconstructor(errors: HookError[]) {\n\t\tsuper(\n\t\t\t`${errors.length} error${\n\t\t\t\terrors.length === 1 ? \"\" : \"s\"\n\t\t\t} were returned by one or more plugins.`,\n\t\t\t{\n\t\t\t\tcause: errors,\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport const isSliceMachineError = (\n\terror: unknown,\n): error is SliceMachineError => {\n\t// TODO: Discuss a stronger way to serialize error for the client to detect with r19\n\t// @ts-expect-error We don't want to add \"dom\" to tsconfig \"lib\" because of the TODO\n\tif (typeof window !== \"undefined\") {\n\t\treturn typeof error === \"object\" && error !== null;\n\t} else {\n\t\treturn (\n\t\t\ttypeof error === \"object\" &&\n\t\t\terror !== null &&\n\t\t\t\"_sliceMachineError\" in error\n\t\t);\n\t}\n};\n\nexport const isUnauthorizedError = (\n\terror: unknown,\n): error is UnauthorizedError => {\n\treturn isSliceMachineError(error) && error.name === UnauthorizedError.name;\n};\n\nexport const isUnauthenticatedError = (\n\terror: unknown,\n): error is UnauthenticatedError => {\n\treturn isSliceMachineError(error) && error.name === UnauthenticatedError.name;\n};\n\nexport const isNotFoundError = (error: unknown): error is NotFoundError => {\n\treturn isSliceMachineError(error) && error.name === NotFoundError.name;\n};\n\nexport const isUnexpectedDataError = (\n\terror: unknown,\n): error is UnexpectedDataError => {\n\treturn isSliceMachineError(error) && error.name === UnexpectedDataError.name;\n};\n\nexport const isInternalError = (error: unknown): error is InternalError => {\n\treturn isSliceMachineError(error) && error.name === InternalError.name;\n};\n"],"names":[],"mappings":";;;;;;;;AAEM,MAAO,0BAA0B,MAAK;AAAA,EAAtC;AAAA;AACL,8CAAqB;AACrB,gCAAO;AAAA;AACP;AACK,MAAO,0BAA0B,kBAAiB;AAAA,EAAlD;AAAA;AACL,gCAAO;AAAA;AACP;AACK,MAAO,6BAA6B,kBAAiB;AAAA,EAArD;AAAA;AACL,gCAAO;AACP,mCAAU;AAAA;AACV;AACK,MAAO,sBAAsB,kBAAiB;AAAA,EAA9C;AAAA;AACL,gCAAO;AAAA;AACP;AACK,MAAO,4BAA4B,kBAAiB;AAAA,EAApD;AAAA;AACL,gCAAO;AAAA;AACP;AACK,MAAO,sBAAsB,kBAAiB;AAAA,EAA9C;AAAA;AACL,gCAAO;AAAA;AACP;AAmBY,MAAA,sBAAsB,CAClC,UAC+B;AAG3B,MAAA,OAAO,WAAW,aAAa;AAC3B,WAAA,OAAO,UAAU,YAAY,UAAU;AAAA,EAAA,OACxC;AACN,WACC,OAAO,UAAU,YACjB,UAAU,QACV,wBAAwB;AAAA,EAEzB;AACF;AAEa,MAAA,sBAAsB,CAClC,UAC+B;AAC/B,SAAO,oBAAoB,KAAK,KAAK,MAAM,SAAS,kBAAkB;AACvE;AAEa,MAAA,yBAAyB,CACrC,UACkC;AAClC,SAAO,oBAAoB,KAAK,KAAK,MAAM,SAAS,qBAAqB;AAC1E;AAEa,MAAA,kBAAkB,CAAC,UAA0C;AACzE,SAAO,oBAAoB,KAAK,KAAK,MAAM,SAAS,cAAc;AACnE;AAEa,MAAA,wBAAwB,CACpC,UACiC;AACjC,SAAO,oBAAoB,KAAK,KAAK,MAAM,SAAS,oBAAoB;AACzE;AAEa,MAAA,kBAAkB,CAAC,UAA0C;AACzE,SAAO,oBAAoB,KAAK,KAAK,MAAM,SAAS,cAAc;AACnE;;;;;;;;;;;;;"}