{"version":3,"file":"markdownToHTML.js","sources":["../../../src/lib/markdownToHTML.ts"],"sourcesContent":["import type { Plugin, Processor } from \"unified\";\nimport type { Root, ElementContent } from \"hast\";\nimport type { Grammar } from \"@wooorm/starry-night\";\nimport { visit } from \"unist-util-visit\";\n\ntype RehypeStarryNightOptions = {\n\tgrammars?: Grammar[];\n};\n\n/**\n * Rehype plugin to highlight code with `starry-night`.\n *\n * Adapted from:\n * https://github.com/wooorm/starry-night/tree/c73aac7b8bff41ada86747f668dd932a791b851b#example-integrate-with-unified-remark-and-rehype\n */\nconst createRehypeStarryNight = async (): Promise<\n\tPlugin<[options?: RehypeStarryNightOptions], Root>\n> => {\n\tconst { createStarryNight, common } = await import(\"@wooorm/starry-night\");\n\tconst { default: tsxGrammar } = await import(\n\t\t\"@wooorm/starry-night/lang/source.tsx.js\"\n\t);\n\tconst { default: vueGrammar } = await import(\n\t\t\"@wooorm/starry-night/lang/text.html.vue.js\"\n\t);\n\tconst { toString } = await import(\"hast-util-to-string\");\n\n\treturn (options = {}) => {\n\t\tconst grammars = options.grammars || [...common, tsxGrammar, vueGrammar];\n\t\tconst starryNightPromise = createStarryNight(grammars);\n\t\tconst prefix = \"language-\";\n\n\t\treturn async (tree) => {\n\t\t\tconst starryNight = await starryNightPromise;\n\n\t\t\tvisit(tree, \"element\", function (node, index, parent) {\n\t\t\t\tif (!parent || index === null || node.tagName !== \"pre\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst head = node.children[0];\n\n\t\t\t\tif (\n\t\t\t\t\t!head ||\n\t\t\t\t\thead.type !== \"element\" ||\n\t\t\t\t\thead.tagName !== \"code\" ||\n\t\t\t\t\t!head.properties\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst classes = head.properties.className;\n\n\t\t\t\tif (!Array.isArray(classes)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst language = classes.find(\n\t\t\t\t\t(d) => typeof d === \"string\" && d.startsWith(prefix),\n\t\t\t\t);\n\n\t\t\t\tif (typeof language !== \"string\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst scope = starryNight.flagToScope(language.slice(prefix.length));\n\n\t\t\t\t// Maybe warn?\n\t\t\t\tif (!scope) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst fragment = starryNight.highlight(toString(head), scope);\n\t\t\t\tconst children = fragment.children as ElementContent[];\n\n\t\t\t\tparent.children.splice(index, 1, {\n\t\t\t\t\ttype: \"element\",\n\t\t\t\t\ttagName: \"div\",\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tclassName: [\n\t\t\t\t\t\t\t\"highlight\",\n\t\t\t\t\t\t\t\"highlight-\" + scope.replace(/^source\\./, \"\").replace(/\\./g, \"-\"),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{ type: \"element\", tagName: \"pre\", properties: {}, children },\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t};\n};\n\nlet processor: Processor;\n\nexport const markdownToHTML = async (markdown: string): Promise<string> => {\n\tif (!processor) {\n\t\tconst { unified } = await import(\"unified\");\n\t\tconst remarkParse = await import(\"remark-parse\");\n\t\tconst remarkGfm = await import(\"remark-gfm\");\n\t\tconst remarkRehype = await import(\"remark-rehype\");\n\t\tconst rehypeStringify = await import(\"rehype-stringify\");\n\t\tconst rehypeStarryNight = await createRehypeStarryNight();\n\n\t\tprocessor = unified()\n\t\t\t.use(remarkParse.default)\n\t\t\t.use(remarkGfm.default)\n\t\t\t.use(remarkRehype.default)\n\t\t\t.use(rehypeStarryNight)\n\t\t\t.use(rehypeStringify.default);\n\t}\n\n\tconst virtualFile = await processor.process(markdown);\n\n\treturn virtualFile.toString();\n};\n"],"names":[],"mappings":";AAeA,MAAM,0BAA0B,YAE5B;AACH,QAAM,EAAE,mBAAmB,OAAW,IAAA,MAAM,OAAO,sBAAsB;AACzE,QAAM,EAAE,SAAS,WAAe,IAAA,MAAM,OACrC,yCAAyC;AAE1C,QAAM,EAAE,SAAS,WAAe,IAAA,MAAM,OACrC,4CAA4C;AAE7C,QAAM,EAAE,SAAA,IAAa,MAAM,OAAO,qBAAqB;AAEhD,SAAA,CAAC,UAAU,OAAM;AACvB,UAAM,WAAW,QAAQ,YAAY,CAAC,GAAG,QAAQ,YAAY,UAAU;AACjE,UAAA,qBAAqB,kBAAkB,QAAQ;AACrD,UAAM,SAAS;AAEf,WAAO,OAAO,SAAQ;AACrB,YAAM,cAAc,MAAM;AAE1B,YAAM,MAAM,WAAW,SAAU,MAAM,OAAO,QAAM;AACnD,YAAI,CAAC,UAAU,UAAU,QAAQ,KAAK,YAAY,OAAO;AACxD;AAAA,QACA;AAEK,cAAA,OAAO,KAAK,SAAS,CAAC;AAG3B,YAAA,CAAC,QACD,KAAK,SAAS,aACd,KAAK,YAAY,UACjB,CAAC,KAAK,YACL;AACD;AAAA,QACA;AAEK,cAAA,UAAU,KAAK,WAAW;AAEhC,YAAI,CAAC,MAAM,QAAQ,OAAO,GAAG;AAC5B;AAAA,QACA;AAEK,cAAA,WAAW,QAAQ,KACxB,CAAC,MAAM,OAAO,MAAM,YAAY,EAAE,WAAW,MAAM,CAAC;AAGjD,YAAA,OAAO,aAAa,UAAU;AACjC;AAAA,QACA;AAED,cAAM,QAAQ,YAAY,YAAY,SAAS,MAAM,OAAO,MAAM,CAAC;AAGnE,YAAI,CAAC,OAAO;AACX;AAAA,QACA;AAED,cAAM,WAAW,YAAY,UAAU,SAAS,IAAI,GAAG,KAAK;AAC5D,cAAM,WAAW,SAAS;AAEnB,eAAA,SAAS,OAAO,OAAO,GAAG;AAAA,UAChC,MAAM;AAAA,UACN,SAAS;AAAA,UACT,YAAY;AAAA,YACX,WAAW;AAAA,cACV;AAAA,cACA,eAAe,MAAM,QAAQ,aAAa,EAAE,EAAE,QAAQ,OAAO,GAAG;AAAA,YAChE;AAAA,UACD;AAAA,UACD,UAAU;AAAA,YACT,EAAE,MAAM,WAAW,SAAS,OAAO,YAAY,IAAI,SAAU;AAAA,UAC7D;AAAA,QAAA,CACD;AAAA,MAAA,CACD;AAAA,IAAA;AAAA,EACF;AAEF;AAEA,IAAI;AAES,MAAA,iBAAiB,OAAO,aAAqC;AACzE,MAAI,CAAC,WAAW;AACf,UAAM,EAAE,QAAA,IAAY,MAAM,OAAO,SAAS;AACpC,UAAA,cAAc,MAAM,OAAO,cAAc;AACzC,UAAA,YAAY,MAAM,OAAO,YAAY;AACrC,UAAA,eAAe,MAAM,OAAO,eAAe;AAC3C,UAAA,kBAAkB,MAAM,OAAO,kBAAkB;AACjD,UAAA,oBAAoB,MAAM;AAEhC,gBAAY,QACV,EAAA,IAAI,YAAY,OAAO,EACvB,IAAI,UAAU,OAAO,EACrB,IAAI,aAAa,OAAO,EACxB,IAAI,iBAAiB,EACrB,IAAI,gBAAgB,OAAO;AAAA,EAC7B;AAED,QAAM,cAAc,MAAM,UAAU,QAAQ,QAAQ;AAEpD,SAAO,YAAY;AACpB;"}