import { HookError } from "@slicemachine/plugin-kit";
export declare class SliceMachineError extends Error {
    _sliceMachineError: boolean;
    name: string;
}
export declare class UnauthorizedError extends SliceMachineError {
    name: string;
}
export declare class UnauthenticatedError extends SliceMachineError {
    name: string;
    message: string;
}
export declare class NotFoundError extends SliceMachineError {
    name: string;
}
export declare class UnexpectedDataError extends SliceMachineError {
    name: string;
}
export declare class InternalError extends SliceMachineError {
    name: string;
}
export declare class PluginError extends SliceMachineError {
    name: string;
}
export declare class PluginHookResultError extends SliceMachineError {
    name: string;
    constructor(errors: HookError[]);
}
export declare const isSliceMachineError: (error: unknown) => error is SliceMachineError;
export declare const isUnauthorizedError: (error: unknown) => error is UnauthorizedError;
export declare const isUnauthenticatedError: (error: unknown) => error is UnauthenticatedError;
export declare const isNotFoundError: (error: unknown) => error is NotFoundError;
export declare const isUnexpectedDataError: (error: unknown) => error is UnexpectedDataError;
export declare const isInternalError: (error: unknown) => error is InternalError;
