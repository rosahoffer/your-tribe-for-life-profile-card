{"version":3,"file":"diff.js","sources":["../../../../../../node_modules/semver/functions/diff.js"],"sourcesContent":["const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // at this point we know stable versions match but overall versions are not equal,\n  // so either they are both prereleases, or the lower version is a prerelease\n\n  if (highHasPre) {\n    // high and low are preleases\n    return 'prerelease'\n  }\n\n  if (lowVersion.patch) {\n    // anything higher than a patch bump would result in the wrong version\n    return 'patch'\n  }\n\n  if (lowVersion.minor) {\n    // anything higher than a minor bump would result in the wrong version\n    return 'minor'\n  }\n\n  // bumping major/minor/patch all have same result\n  return 'major'\n}\n\nmodule.exports = diff\n"],"names":["require$$0"],"mappings":";AAAA,MAAM,QAAQA;AAEd,MAAM,OAAO,CAAC,UAAU,aAAa;AACnC,QAAM,KAAK,MAAM,UAAU,MAAM,IAAI;AACrC,QAAM,KAAK,MAAM,UAAU,MAAM,IAAI;AACrC,QAAM,aAAa,GAAG,QAAQ,EAAE;AAEhC,MAAI,eAAe,GAAG;AACpB,WAAO;AAAA,EACR;AAED,QAAM,WAAW,aAAa;AAC9B,QAAM,cAAc,WAAW,KAAK;AACpC,QAAM,aAAa,WAAW,KAAK;AACnC,QAAM,aAAa,CAAC,CAAC,YAAY,WAAW;AAG5C,QAAM,SAAS,aAAa,QAAQ;AAEpC,MAAI,GAAG,UAAU,GAAG,OAAO;AACzB,WAAO,SAAS;AAAA,EACjB;AAED,MAAI,GAAG,UAAU,GAAG,OAAO;AACzB,WAAO,SAAS;AAAA,EACjB;AAED,MAAI,GAAG,UAAU,GAAG,OAAO;AACzB,WAAO,SAAS;AAAA,EACjB;AAKD,MAAI,YAAY;AAEd,WAAO;AAAA,EACR;AAED,MAAI,WAAW,OAAO;AAEpB,WAAO;AAAA,EACR;AAED,MAAI,WAAW,OAAO;AAEpB,WAAO;AAAA,EACR;AAGD,SAAO;AACT;AAEA,IAAA,SAAiB;","x_google_ignoreList":[0]}