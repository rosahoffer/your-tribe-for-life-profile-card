"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const util = require("util");
const object = require("../../../utils/esm/object.cjs");
const severity = require("../../../utils/esm/severity.cjs");
const hub = require("../../../core/esm/hub.cjs");
function _interopNamespaceDefault(e) {
  const n = Object.create(null, { [Symbol.toStringTag]: { value: "Module" } });
  if (e) {
    for (const k in e) {
      if (k !== "default") {
        const d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: () => e[k]
        });
      }
    }
  }
  n.default = e;
  return Object.freeze(n);
}
const util__namespace = /* @__PURE__ */ _interopNamespaceDefault(util);
class Console {
  constructor() {
    Console.prototype.__init.call(this);
  }
  /**
   * @inheritDoc
   */
  static __initStatic() {
    this.id = "Console";
  }
  /**
   * @inheritDoc
   */
  __init() {
    this.name = Console.id;
  }
  /**
   * @inheritDoc
   */
  setupOnce() {
    for (const level of ["debug", "info", "warn", "error", "log"]) {
      object.fill(console, level, createConsoleWrapper(level));
    }
  }
}
Console.__initStatic();
function createConsoleWrapper(level) {
  return function consoleWrapper(originalConsoleMethod) {
    const sentryLevel = severity.severityLevelFromString(level);
    return function() {
      if (hub.getCurrentHub().getIntegration(Console)) {
        hub.getCurrentHub().addBreadcrumb(
          {
            category: "console",
            level: sentryLevel,
            message: util__namespace.format.apply(void 0, arguments)
          },
          {
            input: [...arguments],
            level
          }
        );
      }
      originalConsoleMethod.apply(this, arguments);
    };
  };
}
exports.Console = Console;
//# sourceMappingURL=console.cjs.map
