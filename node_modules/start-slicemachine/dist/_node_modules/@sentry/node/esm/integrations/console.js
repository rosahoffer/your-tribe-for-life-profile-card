import * as util from "util";
import { fill } from "../../../utils/esm/object.js";
import { severityLevelFromString } from "../../../utils/esm/severity.js";
import { getCurrentHub } from "../../../core/esm/hub.js";
class Console {
  constructor() {
    Console.prototype.__init.call(this);
  }
  /**
   * @inheritDoc
   */
  static __initStatic() {
    this.id = "Console";
  }
  /**
   * @inheritDoc
   */
  __init() {
    this.name = Console.id;
  }
  /**
   * @inheritDoc
   */
  setupOnce() {
    for (const level of ["debug", "info", "warn", "error", "log"]) {
      fill(console, level, createConsoleWrapper(level));
    }
  }
}
Console.__initStatic();
function createConsoleWrapper(level) {
  return function consoleWrapper(originalConsoleMethod) {
    const sentryLevel = severityLevelFromString(level);
    return function() {
      if (getCurrentHub().getIntegration(Console)) {
        getCurrentHub().addBreadcrumb(
          {
            category: "console",
            level: sentryLevel,
            message: util.format.apply(void 0, arguments)
          },
          {
            input: [...arguments],
            level
          }
        );
      }
      originalConsoleMethod.apply(this, arguments);
    };
  };
}
export {
  Console
};
//# sourceMappingURL=console.js.map
