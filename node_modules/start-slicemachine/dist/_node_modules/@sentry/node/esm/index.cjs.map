{"version":3,"file":"index.cjs","sources":["../../../../../../../node_modules/@sentry/node/esm/index.js"],"sourcesContent":["import { Integrations, getMainCarrier } from '@sentry/core';\nexport { Hub, SDK_VERSION, Scope, addBreadcrumb, addGlobalEventProcessor, captureEvent, captureException, captureMessage, configureScope, createTransport, getCurrentHub, getHubFromCarrier, makeMain, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope } from '@sentry/core';\nexport { NodeClient } from './client.js';\nexport { makeNodeTransport } from './transports/http.js';\nexport { close, defaultIntegrations, defaultStackParser, flush, getSentryRelease, init, lastEventId } from './sdk.js';\nexport { DEFAULT_USER_INCLUDES, addRequestDataToEvent, extractRequestData } from './requestdata.js';\nexport { deepReadDirSync } from './utils.js';\nimport * as domain from 'domain';\nimport * as handlers from './handlers.js';\nexport { handlers as Handlers };\nimport * as index from './integrations/index.js';\n\nconst INTEGRATIONS = {\n  ...Integrations,\n  ...index,\n};\n\n// We need to patch domain on the global __SENTRY__ object to make it work for node in cross-platform packages like\n// @sentry/core. If we don't do this, browser bundlers will have troubles resolving `require('domain')`.\nconst carrier = getMainCarrier();\nif (carrier.__SENTRY__) {\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  carrier.__SENTRY__.extensions.domain = carrier.__SENTRY__.extensions.domain || domain;\n}\n\nexport { INTEGRATIONS as Integrations };\n//# sourceMappingURL=index.js.map\n"],"names":["getMainCarrier","domain"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,UAAUA,IAAc,eAAA;AAC9B,IAAI,QAAQ,YAAY;AACtB,UAAQ,WAAW,aAAa,QAAQ,WAAW,cAAc;AACjE,UAAQ,WAAW,WAAW,SAAS,QAAQ,WAAW,WAAW,UAAUC;AACjF;;;;;;;;;","x_google_ignoreList":[0]}