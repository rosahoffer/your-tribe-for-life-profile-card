{"version":3,"file":"eventbuilder.js","sources":["../../../../../../../node_modules/@sentry/node/esm/eventbuilder.js"],"sourcesContent":["import { getCurrentHub } from '@sentry/core';\nimport { isError, isPlainObject, extractExceptionKeysForMessage, normalizeToSize, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser, error) {\n  return stackParser(error.stack || '', 1);\n}\n\n/**\n * Extracts stack frames from the error and builds a Sentry Exception\n */\nfunction exceptionFromError(stackParser, error) {\n  const exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  };\n\n  const frames = parseStackFrames(stackParser, error);\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  return exception;\n}\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nfunction eventFromUnknownInput(stackParser, exception, hint) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let ex = exception;\n  const providedMechanism =\n    hint && hint.data && (hint.data ).mechanism;\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  };\n\n  if (!isError(exception)) {\n    if (isPlainObject(exception)) {\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      const message = `Non-Error exception captured with keys: ${extractExceptionKeysForMessage(exception)}`;\n\n      const hub = getCurrentHub();\n      const client = hub.getClient();\n      const normalizeDepth = client && client.getOptions().normalizeDepth;\n      hub.configureScope(scope => {\n        scope.setExtra('__serialized__', normalizeToSize(exception, normalizeDepth));\n      });\n\n      ex = (hint && hint.syntheticException) || new Error(message);\n      (ex ).message = message;\n    } else {\n      // This handles when someone does: `throw \"something awesome\";`\n      // We use synthesized Error here so we can extract a (rough) stack trace.\n      ex = (hint && hint.syntheticException) || new Error(exception );\n      (ex ).message = exception ;\n    }\n    mechanism.synthetic = true;\n  }\n\n  const event = {\n    exception: {\n      values: [exceptionFromError(stackParser, ex )],\n    },\n  };\n\n  addExceptionTypeValue(event, undefined, undefined);\n  addExceptionMechanism(event, mechanism);\n\n  return {\n    ...event,\n    event_id: hint && hint.event_id,\n  };\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const event = {\n    event_id: hint && hint.event_id,\n    level,\n    message,\n  };\n\n  if (attachStacktrace && hint && hint.syntheticException) {\n    const frames = parseStackFrames(stackParser, hint.syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [\n          {\n            value: message,\n            stacktrace: { frames },\n          },\n        ],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromMessage, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n"],"names":[],"mappings":";;;;;AAMA,SAAS,iBAAiB,aAAa,OAAO;AAC5C,SAAO,YAAY,MAAM,SAAS,IAAI,CAAC;AACzC;AAKA,SAAS,mBAAmB,aAAa,OAAO;AAC9C,QAAM,YAAY;AAAA,IAChB,MAAM,MAAM,QAAQ,MAAM,YAAY;AAAA,IACtC,OAAO,MAAM;AAAA,EACjB;AAEE,QAAM,SAAS,iBAAiB,aAAa,KAAK;AAClD,MAAI,OAAO,QAAQ;AACjB,cAAU,aAAa,EAAE;EAC1B;AAED,SAAO;AACT;AAMA,SAAS,sBAAsB,aAAa,WAAW,MAAM;AAE3D,MAAI,KAAK;AACT,QAAM,oBACJ,QAAQ,KAAK,QAAS,KAAK,KAAO;AACpC,QAAM,YAAY,qBAAqB;AAAA,IACrC,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAEE,MAAI,CAAC,QAAQ,SAAS,GAAG;AACvB,QAAI,cAAc,SAAS,GAAG;AAG5B,YAAM,UAAU,2CAA2C,+BAA+B,SAAS;AAEnG,YAAM,MAAM;AACZ,YAAM,SAAS,IAAI;AACnB,YAAM,iBAAiB,UAAU,OAAO,WAAU,EAAG;AACrD,UAAI,eAAe,WAAS;AAC1B,cAAM,SAAS,kBAAkB,gBAAgB,WAAW,cAAc,CAAC;AAAA,MACnF,CAAO;AAED,WAAM,QAAQ,KAAK,sBAAuB,IAAI,MAAM,OAAO;AAC3D,MAAC,GAAK,UAAU;AAAA,IACtB,OAAW;AAGL,WAAM,QAAQ,KAAK,sBAAuB,IAAI,MAAM;AACpD,MAAC,GAAK,UAAU;AAAA,IACjB;AACD,cAAU,YAAY;AAAA,EACvB;AAED,QAAM,QAAQ;AAAA,IACZ,WAAW;AAAA,MACT,QAAQ,CAAC,mBAAmB,aAAa,EAAE,CAAE;AAAA,IAC9C;AAAA,EACL;AAEE,wBAAsB,OAAO,QAAW,MAAS;AACjD,wBAAsB,OAAO,SAAS;AAEtC,SAAO;AAAA,IACL,GAAG;AAAA,IACH,UAAU,QAAQ,KAAK;AAAA,EAC3B;AACA;AAMA,SAAS,iBACP,aACA,SAEA,QAAQ,QACR,MACA,kBACA;AACA,QAAM,QAAQ;AAAA,IACZ,UAAU,QAAQ,KAAK;AAAA,IACvB;AAAA,IACA;AAAA,EACJ;AAEE,MAAI,oBAAoB,QAAQ,KAAK,oBAAoB;AACvD,UAAM,SAAS,iBAAiB,aAAa,KAAK,kBAAkB;AACpE,QAAI,OAAO,QAAQ;AACjB,YAAM,YAAY;AAAA,QAChB,QAAQ;AAAA,UACN;AAAA,YACE,OAAO;AAAA,YACP,YAAY,EAAE,OAAQ;AAAA,UACvB;AAAA,QACF;AAAA,MACT;AAAA,IACK;AAAA,EACF;AAED,SAAO;AACT;","x_google_ignoreList":[0]}