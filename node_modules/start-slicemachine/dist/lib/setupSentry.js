import './../_node_modules/@sentry/node/esm/index.js';
import semver from './../_node_modules/semver/index.js';
import { SENTRY_EXPRESS_DSN } from "../constants.js";
import { checkIsSentryEnabled } from "./checkIsSentryEnabled.js";
import { init } from './../_node_modules/@sentry/node/esm/sdk.js';
import { setUser, setTag, setContext } from './../_node_modules/@sentry/core/esm/exports.js';
const setupSentry = async (manager) => {
  if (!checkIsSentryEnabled()) {
    return;
  }
  const sliceMachineVersion = await manager.versions.getRunningSliceMachineVersion();
  const sliceMachineConfig = await manager.project.getSliceMachineConfig();
  let userProfile;
  try {
    userProfile = await manager.user.getProfile();
  } catch {
  }
  const isStableVersion = semver.prerelease(sliceMachineVersion) === null && semver.lte("0.1.0", sliceMachineVersion);
  init({
    dsn: SENTRY_EXPRESS_DSN,
    release: sliceMachineVersion,
    environment: isStableVersion ? "production" : "alpha"
  });
  if (userProfile) {
    setUser({ id: userProfile.shortId });
  }
  setTag("repository", sliceMachineConfig.repositoryName);
  setContext("Repository Data", {
    name: sliceMachineConfig.repositoryName
  });
};
export {
  setupSentry
};
//# sourceMappingURL=setupSentry.js.map
