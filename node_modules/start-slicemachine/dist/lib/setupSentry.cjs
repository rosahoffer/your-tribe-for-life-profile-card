"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
require('./../_node_modules/@sentry/node/esm/index.cjs');
const index = require('./../_node_modules/semver/index.cjs');
const constants = require("../constants.cjs");
const checkIsSentryEnabled = require("./checkIsSentryEnabled.cjs");
const sdk = require('./../_node_modules/@sentry/node/esm/sdk.cjs');
const exports$1 = require('./../_node_modules/@sentry/core/esm/exports.cjs');
const setupSentry = async (manager) => {
  if (!checkIsSentryEnabled.checkIsSentryEnabled()) {
    return;
  }
  const sliceMachineVersion = await manager.versions.getRunningSliceMachineVersion();
  const sliceMachineConfig = await manager.project.getSliceMachineConfig();
  let userProfile;
  try {
    userProfile = await manager.user.getProfile();
  } catch {
  }
  const isStableVersion = index.prerelease(sliceMachineVersion) === null && index.lte("0.1.0", sliceMachineVersion);
  sdk.init({
    dsn: constants.SENTRY_EXPRESS_DSN,
    release: sliceMachineVersion,
    environment: isStableVersion ? "production" : "alpha"
  });
  if (userProfile) {
    exports$1.setUser({ id: userProfile.shortId });
  }
  exports$1.setTag("repository", sliceMachineConfig.repositoryName);
  exports$1.setContext("Repository Data", {
    name: sliceMachineConfig.repositoryName
  });
};
exports.setupSentry = setupSentry;
//# sourceMappingURL=setupSentry.cjs.map
