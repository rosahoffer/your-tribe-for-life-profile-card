import * as t from "io-ts";
import { Link, LinkLegacy } from "../LinkContent";
export declare const Meta: t.ExactC<t.IntersectionC<[t.PartialC<{
    data: t.UnknownC;
}>, t.TypeC<{
    start: t.NumberC;
    end: t.NumberC;
    type: t.UnionC<[t.KeyofC<{
        heading1: null;
        heading2: null;
        heading3: null;
        heading4: null;
        heading5: null;
        heading6: null;
        paragraph: null;
        strong: null;
        em: null;
        preformatted: null;
        hyperlink: null;
        image: null;
        embed: null;
        "list-item": null;
        "o-list-item": null;
        rtl: null;
    }>, t.LiteralC<"label">]>;
}>]>>;
export type Meta = t.TypeOf<typeof Meta>;
export declare const Span: t.ExactC<t.IntersectionC<[t.PartialC<{
    data: t.UnknownC;
}>, t.TypeC<{
    start: t.NumberC;
    end: t.NumberC;
    type: t.UnionC<[t.KeyofC<{
        heading1: null;
        heading2: null;
        heading3: null;
        heading4: null;
        heading5: null;
        heading6: null;
        paragraph: null;
        strong: null;
        em: null;
        preformatted: null;
        hyperlink: null;
        image: null;
        embed: null;
        "list-item": null;
        "o-list-item": null;
        rtl: null;
    }>, t.LiteralC<"label">]>;
}>]>>;
export type Span = Meta;
export declare const ValidatedMetas: (linkCodec: LinkCodec) => t.Type<({
    data?: unknown;
} & {
    start: number;
    end: number;
    type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
})[], ({
    data?: unknown;
} & {
    start: number;
    end: number;
    type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
})[], unknown>;
export declare const ImageBlock: t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"image">;
    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        origin: t.ExactC<t.TypeC<{
            id: t.StringC;
            url: t.StringC;
            width: t.NumberC;
            height: t.NumberC;
        }>>;
        width: t.NumberC;
        height: t.NumberC;
        edit: t.TypeC<{
            zoom: t.NumberC;
            crop: t.TypeC<{
                x: t.NumberC;
                y: t.NumberC;
            }>;
            background: t.StringC;
        }>;
    }>, t.PartialC<{
        url: t.StringC;
        credits: t.Type<string | null, string | null, unknown>;
        alt: t.Type<string | null, string | null, unknown>;
        provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.PartialC<{
        linkTo: t.UnionC<[t.Type<({
            __TYPE__: "ImageLink";
        } & {
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
            size: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "FileLink";
        } & {
            size?: string;
        }) | ({
            __TYPE__: "DocumentLink";
        } & {
            id: string;
        }) | ({
            __TYPE__: "ExternalLink";
        } & {
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }), ({
            __TYPE__: "ImageLink";
        } & {
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
            size: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "FileLink";
        } & {
            size?: string;
        }) | ({
            __TYPE__: "DocumentLink";
        } & {
            id: string;
        }) | ({
            __TYPE__: "ExternalLink";
        } & {
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }), unknown>, t.NullC, t.UndefinedC]>;
    }>]>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>;
export type ImageBlock = t.TypeOf<typeof ImageBlock>;
export declare function checkImageBlock(block: Block): block is ImageBlock;
export declare const EmbedBlock: t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"embed">;
    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        embed_url: t.StringC;
        type: t.StringC;
    }>, t.PartialC<{
        version: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
        title: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        author_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        author_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        provider_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        provider_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        cache_age: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
        thumbnail_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        thumbnail_width: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
        thumbnail_height: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
        html: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"EmbedContent">;
        all: t.UnknownC;
    }>>]>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>;
export type EmbedBlock = t.TypeOf<typeof EmbedBlock>;
export declare function checkEmbedBlock(block: Block): block is EmbedBlock;
type LinkCodec = typeof Link | typeof LinkLegacy;
export declare const TextBlock: t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
    content: t.IntersectionC<[t.TypeC<{
        text: t.StringC;
    }>, t.PartialC<{
        spans: t.Type<({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], ({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], unknown>;
    }>]>;
}>, t.PartialC<{
    label: t.StringC;
    direction: t.StringC;
}>]>>;
export type TextBlock = t.TypeOf<typeof TextBlock>;
export declare const BlockLegacy: t.Type<({
    type: "image";
    data: {
        origin: {
            id: string;
            url: string;
            width: number;
            height: number;
        };
        width: number;
        height: number;
        edit: {
            zoom: number;
            crop: {
                x: number;
                y: number;
            };
            background: string;
        };
    } & {
        url?: string;
        credits?: string | null;
        alt?: string | null;
        provider?: string | null | undefined;
    } & {
        linkTo?: ({
            __TYPE__: "ImageLink";
        } & {
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
            size: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "FileLink";
        } & {
            size?: string;
        }) | ({
            __TYPE__: "DocumentLink";
        } & {
            id: string;
        }) | ({
            __TYPE__: "ExternalLink";
        } & {
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }) | null | undefined;
    };
} & {
    label?: string | null | undefined;
    direction?: string | null | undefined;
}) | ({
    type: "embed";
    data: {
        embed_url: string;
        type: string;
    } & {
        version?: string | number | null;
        title?: string | null | undefined;
        author_name?: string | null | undefined;
        author_url?: string | null | undefined;
        provider_name?: string | null | undefined;
        provider_url?: string | null | undefined;
        cache_age?: string | number | null;
        thumbnail_url?: string | null | undefined;
        thumbnail_width?: number | null | undefined;
        thumbnail_height?: number | null | undefined;
        html?: string | null | undefined;
    } & {
        __TYPE__: "EmbedContent";
        all: unknown;
    };
} & {
    label?: string | null | undefined;
    direction?: string | null | undefined;
}) | ({
    type: "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
    content: {
        text: string;
    } & {
        spans?: ({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[];
    };
} & {
    label?: string;
    direction?: string;
}), ({
    type: "image";
    data: {
        origin: {
            id: string;
            url: string;
            width: number;
            height: number;
        };
        width: number;
        height: number;
        edit: {
            zoom: number;
            crop: {
                x: number;
                y: number;
            };
            background: string;
        };
    } & {
        url?: string;
        credits?: string | null;
        alt?: string | null;
        provider?: string | null | undefined;
    } & {
        linkTo?: ({
            __TYPE__: "ImageLink";
        } & {
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
            size: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "FileLink";
        } & {
            size?: string;
        }) | ({
            __TYPE__: "DocumentLink";
        } & {
            id: string;
        }) | ({
            __TYPE__: "ExternalLink";
        } & {
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }) | null | undefined;
    };
} & {
    label?: string | null | undefined;
    direction?: string | null | undefined;
}) | ({
    type: "embed";
    data: {
        embed_url: string;
        type: string;
    } & {
        version?: string | number | null;
        title?: string | null | undefined;
        author_name?: string | null | undefined;
        author_url?: string | null | undefined;
        provider_name?: string | null | undefined;
        provider_url?: string | null | undefined;
        cache_age?: string | number | null;
        thumbnail_url?: string | null | undefined;
        thumbnail_width?: number | null | undefined;
        thumbnail_height?: number | null | undefined;
        html?: string | null | undefined;
    } & {
        __TYPE__: "EmbedContent";
        all: unknown;
    };
} & {
    label?: string | null | undefined;
    direction?: string | null | undefined;
}) | ({
    type: "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
    content: {
        text: string;
    } & {
        spans?: ({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[];
    };
} & {
    label?: string;
    direction?: string;
}), unknown>;
export declare const Block: t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"image">;
    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        origin: t.ExactC<t.TypeC<{
            id: t.StringC;
            url: t.StringC;
            width: t.NumberC;
            height: t.NumberC;
        }>>;
        width: t.NumberC;
        height: t.NumberC;
        edit: t.TypeC<{
            zoom: t.NumberC;
            crop: t.TypeC<{
                x: t.NumberC;
                y: t.NumberC;
            }>;
            background: t.StringC;
        }>;
    }>, t.PartialC<{
        url: t.StringC;
        credits: t.Type<string | null, string | null, unknown>;
        alt: t.Type<string | null, string | null, unknown>;
        provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.PartialC<{
        linkTo: t.UnionC<[t.Type<({
            __TYPE__: "ImageLink";
        } & {
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
            size: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "FileLink";
        } & {
            size?: string;
        }) | ({
            __TYPE__: "DocumentLink";
        } & {
            id: string;
        }) | ({
            __TYPE__: "ExternalLink";
        } & {
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }), ({
            __TYPE__: "ImageLink";
        } & {
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
            size: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "FileLink";
        } & {
            size?: string;
        }) | ({
            __TYPE__: "DocumentLink";
        } & {
            id: string;
        }) | ({
            __TYPE__: "ExternalLink";
        } & {
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }), unknown>, t.NullC, t.UndefinedC]>;
    }>]>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"embed">;
    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        embed_url: t.StringC;
        type: t.StringC;
    }>, t.PartialC<{
        version: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
        title: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        author_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        author_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        provider_name: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        provider_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        cache_age: t.UnionC<[t.StringC, t.NumberC, t.NullC]>;
        thumbnail_url: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        thumbnail_width: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
        thumbnail_height: t.UnionC<[t.Type<number, number, unknown>, t.NullC, t.UndefinedC]>;
        html: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"EmbedContent">;
        all: t.UnknownC;
    }>>]>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
    content: t.IntersectionC<[t.TypeC<{
        text: t.StringC;
    }>, t.PartialC<{
        spans: t.Type<({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], ({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], unknown>;
    }>]>;
}>, t.PartialC<{
    label: t.StringC;
    direction: t.StringC;
}>]>>]>;
export type Block = t.TypeOf<typeof Block>;
export {};
