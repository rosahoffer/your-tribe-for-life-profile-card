import * as t from "io-ts"
import { withFallback } from "io-ts-types"

import {
	DocumentLink,
	DocumentLinkType as dlType,
} from "../../../documents/widgets/nestable/Link/DocumentLink"
import {
	ExternalLink,
	ExternalLinkType as elType,
} from "../../../documents/widgets/nestable/Link/ExternalLink"
import {
	FileLink,
	FileLinkType as flType,
} from "../../../documents/widgets/nestable/Link/FileLink"
import {
	ImageLink,
	ImageLinkType as ilType,
} from "../../../documents/widgets/nestable/Link/ImageLink"
import { LinkContentType as lcType } from "../../../documents/widgets/nestable/Link/LinkContent"

export const ImageLinkContent = t.intersection([
	t.strict({
		__TYPE__: t.literal(ilType),
	}),
	ImageLink,
])
export type ImageLinkContent = t.TypeOf<typeof ImageLinkContent>
export const ImageLinkType = ilType

export const FileLinkContent = t.intersection([
	FileLink,
	t.exact(
		t.type({
			__TYPE__: t.literal(flType),
			size: withFallback(t.string, "0"),
		}),
	),
])
export type FileLinkContent = t.TypeOf<typeof FileLinkContent>
export const FileLinkType = flType

export const DocumentLinkContent = t.intersection([
	t.strict({
		__TYPE__: t.literal(dlType),
	}),
	DocumentLink,
])
export type DocumentLinkContent = t.TypeOf<typeof DocumentLinkContent>
export const DocumentLinkType = dlType

export const ExternalLinkContent = t.intersection([
	t.strict({
		__TYPE__: t.literal(elType),
	}),
	ExternalLink,
])
export type ExternalLinkContent = t.TypeOf<typeof ExternalLinkContent>
export const ExternalLinkType = elType

export const LinkContent = t.strict({
	__TYPE__: t.literal(lcType),
	value: t.union([
		ImageLinkContent,
		FileLinkContent,
		DocumentLinkContent,
		ExternalLinkContent,
	]),
})

export type LinkContent = t.TypeOf<typeof LinkContent>
export const LinkContentType = lcType

export const LinksTypes = {
	DocumentLink: DocumentLinkType,
	FileLink: FileLinkType,
	ExternalLink: ExternalLinkType,
	ImageLink: ImageLinkType,
	LinkContent: LinkContentType,
} as const
