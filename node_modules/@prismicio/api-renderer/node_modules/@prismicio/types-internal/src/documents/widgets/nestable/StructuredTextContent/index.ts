import { Chain } from "fp-ts/Either"
import * as t from "io-ts"

import { Block } from "./Block"

export const StructuredTextContentType = "StructuredTextContent"
export type StructuredTextContent = {
	value: Block[]
	__TYPE__: typeof StructuredTextContentType
}

export const StructuredTextContent = new t.Type<StructuredTextContent, string>(
	StructuredTextContentType,
	(u): u is StructuredTextContent =>
		(u as StructuredTextContent)?.__TYPE__ === StructuredTextContentType,
	(u, c) =>
		Chain.chain(t.array(Block).validate(u, c), (u) => {
			return t.success({ value: u, __TYPE__: StructuredTextContentType })
		}),
	() => {
		throw new Error("NotImplementedError: Not relevant method")
	},
)

export * as Blocks from "./Block"
