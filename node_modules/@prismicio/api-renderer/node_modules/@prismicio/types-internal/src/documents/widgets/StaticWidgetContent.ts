import * as O from "fp-ts/Option"

import { GroupContent, GroupContentType } from "./GroupContent"
import {
	NonEmptySimpleWidgetContent,
	SimpleWidgetContent,
} from "./SimpleWidgetContent"

type StaticWidgetContent = SimpleWidgetContent | GroupContent
export type NonEmptyStaticWidgetContent =
	| NonEmptySimpleWidgetContent
	| GroupContent

const StaticWidgetContent = {
	fromJson: (
		prefixes: Array<string>,
		key: string,
		value: unknown,
		fieldTypes: Map<string, string>,
		fieldPositions: Map<string, number>,
	): O.Option<StaticWidgetContent> => {
		const prefixedKey = Array.of(prefixes, [key]).flat().join(".")
		const type = fieldTypes.get(prefixedKey)
		if (type === "Group") {
			return GroupContent.fromJson(
				prefixes,
				key,
				value,
				fieldTypes,
				fieldPositions,
			)
		} else if (type) {
			return SimpleWidgetContent.from(type, value)
		} else {
			return O.none
		}
	},
	is: (value: unknown): value is StaticWidgetContent => {
		return (
			SimpleWidgetContent.is(value) ||
			GroupContentType === (value as StaticWidgetContent).__TYPE__
		)
	},
}

export default StaticWidgetContent
