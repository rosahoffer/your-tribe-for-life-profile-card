import * as O from "fp-ts/Option"

import StaticWidgetContent from "../StaticWidgetContent"
import { CompositeSliceContent } from "./CompositeSliceContent"
import { SharedSliceContent } from "./SharedSliceContent"
import type { SimpleSliceContent } from "./SimpleSliceContent"

export type SliceWidgetContent =
	| SimpleSliceContent
	| CompositeSliceContent
	| SharedSliceContent
export const SliceWidgetContent = {
	fromJson: (
		prefixes: Array<string>,
		key: string,
		value: unknown,
		fieldTypes: Map<string, string>,
		fieldPositions: Map<string, number>,
	): O.Option<SliceWidgetContent> => {
		const prefixedKey = Array.of(prefixes, [key]).flat().join(".")

		const fieldType = fieldTypes.get(prefixedKey)
		if (fieldType === "SharedSlice") {
			return SharedSliceContent.fromJson(
				prefixes,
				key,
				value,
				fieldTypes,
				fieldPositions,
			)
		} else if (fieldType === "Slice") {
			return CompositeSliceContent.fromJson(
				prefixes,
				key,
				value,
				fieldTypes,
				fieldPositions,
			)
		} else if (fieldType) {
			return StaticWidgetContent.fromJson(
				prefixes,
				key,
				value,
				fieldTypes,
				fieldPositions,
			)
		} else {
			return O.none
		}
	},
}
