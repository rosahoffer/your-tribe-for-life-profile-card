import * as t from "io-ts"

import { DocumentLink, DocumentLinkType, isDocumentLink } from "./DocumentLink"
import { ExternalLink, ExternalLinkType, isExternalLink } from "./ExternalLink"
import { FileLink, FileLinkType, isFileLink } from "./FileLink"
import { ImageLink, ImageLinkType, isImageLink } from "./ImageLink"
import { LinkContentType } from "./LinkContent"

export const Link = t.union([ImageLink, FileLink, DocumentLink, ExternalLink])
export type Link = t.TypeOf<typeof Link>
export type LinkO = t.OutputOf<typeof Link>

export { type DocumentLinkO, DocumentLink } from "./DocumentLink"
export { type ExternalLinkO, ExternalLink } from "./ExternalLink"
export { type FileLinkO, FileLink } from "./FileLink"
export { type ImageLinkO, ImageLink } from "./ImageLink"
export { LinkContent } from "./LinkContent"

export const BROKEN_CUSTOM_TYPE = "broken_type"

export const is = {
	documentLink: isDocumentLink,
	fileLink: isFileLink,
	externalLink: isExternalLink,
	imageLink: isImageLink,
}
export const LinksTypes = {
	DocumentLink: DocumentLinkType,
	FileLink: FileLinkType,
	ExternalLink: ExternalLinkType,
	ImageLink: ImageLinkType,
	LinkContent: LinkContentType,
} as const

export type LinksTypes = typeof LinksTypes[keyof typeof LinksTypes]
