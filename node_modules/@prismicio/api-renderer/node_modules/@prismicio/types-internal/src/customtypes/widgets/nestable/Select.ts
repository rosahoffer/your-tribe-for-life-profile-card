import * as t from "io-ts"

import {
	StringFromBoolean,
	StringFromNumber,
	StringOrNull,
} from "../../../validators"
import { WidgetTypes } from "../WidgetTypes"

const SelectConfig = t.exact(
	t.partial({
		label: StringOrNull,
		placeholder: t.string,
		default_value: t.string,
		options: t.readonlyArray(
			t.union([t.string, StringFromNumber, StringFromBoolean]),
		),
	}),
)
type SelectConfig = t.TypeOf<typeof SelectConfig>

const Select = t.exact(
	t.intersection([
		t.type({
			type: t.literal(WidgetTypes.Select),
		}),
		t.partial({
			fieldset: StringOrNull,
			config: SelectConfig,
		}),
	]),
)
type Select = t.TypeOf<typeof Select>

export default Select
