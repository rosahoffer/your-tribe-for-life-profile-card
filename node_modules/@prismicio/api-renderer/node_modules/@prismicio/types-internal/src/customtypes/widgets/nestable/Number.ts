import * as t from "io-ts"
import { NumberFromString } from "io-ts-types/lib/NumberFromString"

import { StringOrNull } from "../../../validators"
import { WidgetTypes } from "../WidgetTypes"

const NumberConfig = t.exact(
	t.partial({
		label: StringOrNull,
		placeholder: t.string,
		min: t.union([t.number, NumberFromString]),
		max: t.union([t.number, NumberFromString]),
		step: t.union([t.number, NumberFromString]),
	}),
)
type NumberConfig = t.TypeOf<typeof NumberConfig>

const Number = t.exact(
	t.intersection([
		t.type({
			type: t.literal(WidgetTypes.Number),
		}),
		t.partial({
			fieldset: StringOrNull,
			config: NumberConfig,
		}),
	]),
)
type Number = t.TypeOf<typeof Number>

export default Number
