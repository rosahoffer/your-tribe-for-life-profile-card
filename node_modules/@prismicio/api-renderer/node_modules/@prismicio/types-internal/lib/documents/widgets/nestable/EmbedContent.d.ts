import * as t from "io-ts";
export declare const EmbedContentType = "EmbedContent";
export declare type EmbedContent = t.TypeOf<typeof EmbedContentC> & {
    all: unknown;
};
export declare type EmbedContentO = t.OutputOf<typeof EmbedContentC> & {
    all: unknown;
};
export declare const EmbedContent: t.Type<EmbedContentO, unknown, unknown>;
export declare const EmbedContentC: t.Type<{
    embed_url: string;
    type: string;
} & {
    version?: string | number | null;
    title?: string | null | undefined;
    author_name?: string | null | undefined;
    author_url?: string | null | undefined;
    provider_name?: string | null | undefined;
    provider_url?: string | null | undefined;
    cache_age?: string | number | null;
    thumbnail_url?: string | null | undefined;
    thumbnail_width?: number | null | undefined;
    thumbnail_height?: number | null | undefined;
    html?: string | null | undefined;
}, {
    embed_url: string;
    type: string;
} & {
    version?: string | number | null;
    title?: string | null | undefined;
    author_name?: string | null | undefined;
    author_url?: string | null | undefined;
    provider_name?: string | null | undefined;
    provider_url?: string | null | undefined;
    cache_age?: string | number | null;
    thumbnail_url?: string | null | undefined;
    thumbnail_width?: number | null | undefined;
    thumbnail_height?: number | null | undefined;
    html?: string | null | undefined;
} & {
    __TYPE__: "EmbedContent";
}, unknown>;
