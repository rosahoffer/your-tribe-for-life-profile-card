"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FieldContentType = void 0;
const tslib_1 = require("tslib");
const function_1 = require("fp-ts/function");
const O = (0, tslib_1.__importStar)(require("fp-ts/Option"));
const t = (0, tslib_1.__importStar)(require("io-ts"));
exports.FieldContentType = "FieldContent";
//we do that instead of idiomatic .trim()
//because we need to have the exact same behaviour than scala/java .trim()
//in other world only trim space and not non-breaking space or tab
function trimScalaStyle(s) {
    let startAt = 0;
    /* eslint-disable  @typescript-eslint/no-non-null-assertion */
    while (startAt < s.length && s[startAt] <= " ") {
        startAt++;
    }
    let endAt = s.length;
    /* eslint-disable  @typescript-eslint/no-non-null-assertion */
    while (startAt < endAt && s[endAt - 1] <= " ") {
        endAt--;
    }
    return s.substring(startAt, endAt);
}
const FieldContent = {
    types: ["Text", "Date", "Timestamp", "Color", "Number", "Range", "Select"],
    forType: (type, value) => {
        return (0, function_1.pipe)(O.fromEither(t.string.decode(value)), O.map((r) => {
            return {
                value: trimScalaStyle(r),
                type,
                __TYPE__: "FieldContent",
            };
        }));
    },
};
exports.default = FieldContent;
