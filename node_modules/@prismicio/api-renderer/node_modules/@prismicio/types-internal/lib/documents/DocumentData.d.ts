import * as O from "fp-ts/lib/Option";
import { type WidgetContent, type WidgetKey } from "./widgets";
declare type DocumentData = Map<WidgetKey, O.Option<WidgetContent>>;
declare const DocumentData: {
    getWidget(key: WidgetKey, widgets: Map<WidgetKey, unknown>, widgetTypes: Map<WidgetKey, string>, widgetPositions: Map<WidgetKey, number>, parsed: Map<string, O.Option<WidgetContent>>): O.Option<WidgetContent>;
    fromJson(widgets: Map<WidgetKey, unknown>, widgetTypes: Map<WidgetKey, string>, widgetPositions: Map<WidgetKey, number>): DocumentData;
    partitionData(data: {
        [p: string]: unknown;
    }): {
        types: Map<string, string>;
        positions: Map<string, number>;
        widgets: Map<WidgetKey, unknown>;
        slugs: ReadonlyArray<string>;
        uid: string | undefined;
    };
};
export default DocumentData;
