"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompositeSliceContent = exports.CompositeSliceContentType = void 0;
const tslib_1 = require("tslib");
const Either_1 = require("fp-ts/Either");
const O = (0, tslib_1.__importStar)(require("fp-ts/Option"));
const t = (0, tslib_1.__importStar)(require("io-ts"));
const index_1 = require("../index");
exports.CompositeSliceContentType = "CompositeSliceContent";
const codec = t.exact(t.partial({
    repeat: t.array(t.unknown),
    "non-repeat": t.UnknownRecord,
}));
exports.CompositeSliceContent = {
    fromJson: (prefixes, key, value, fieldTypes, fieldPositions) => {
        var _a;
        const prefixedRepeatKey = Array.of(prefixes, [key, "repeat"])
            .flat()
            .join(".");
        const decodedValue = codec.decode(value);
        if ((0, Either_1.isRight)(decodedValue)) {
            const repeatObj = decodedValue.right.repeat;
            const nonRepeatObj = (_a = decodedValue.right["non-repeat"]) !== null && _a !== void 0 ? _a : {};
            const groupItemsContentsRepeat = index_1.GroupContent.itemsContentsFromJson(prefixedRepeatKey, repeatObj, fieldTypes, fieldPositions);
            const sortedFields = Object.entries(nonRepeatObj).sort(([k1], [k2]) => {
                var _a, _b;
                const p1 = (_a = fieldPositions.get(`${Array.of(prefixes, [key]).flat().join(".")}.${k1}`)) !== null && _a !== void 0 ? _a : 10000;
                const p2 = (_b = fieldPositions.get(`${Array.of(prefixes, [key]).flat().join(".")}.${k2}`)) !== null && _b !== void 0 ? _b : 10000;
                return p1 - p2;
            });
            const nonRepeat = sortedFields.reduce((acc, [k, v]) => {
                const kp = Array.of(prefixes, [key, "non-repeat", k]).flat().join(".");
                const kind = fieldTypes.get(kp);
                if (kind) {
                    const mWidgetContent = index_1.SimpleWidgetContent.from(kind, v);
                    if (O.isSome(mWidgetContent)) {
                        acc[k] = mWidgetContent.value;
                    }
                }
                return acc;
            }, {});
            return O.some({
                repeat: groupItemsContentsRepeat,
                nonRepeat,
                __TYPE__: "CompositeSliceContent",
            });
        }
        else {
            return O.none;
        }
    },
};
