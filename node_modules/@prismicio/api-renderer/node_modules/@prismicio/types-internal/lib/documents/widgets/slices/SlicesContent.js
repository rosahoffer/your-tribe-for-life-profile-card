"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlicesContent = exports.SlicesContentType = void 0;
const tslib_1 = require("tslib");
const A = (0, tslib_1.__importStar)(require("fp-ts/Array"));
const function_1 = require("fp-ts/function");
const O = (0, tslib_1.__importStar)(require("fp-ts/Option"));
const t = (0, tslib_1.__importStar)(require("io-ts"));
const function_2 = require("../../../validators/function");
const SliceWidgetContent_1 = require("./SliceWidgetContent");
exports.SlicesContentType = "SliceContentType";
const codec = t.exact(t.intersection([
    t.type({
        key: t.string,
        value: t.unknown,
    }),
    t.partial({
        label: (0, function_2.nullable)(t.string),
    }),
]));
exports.SlicesContent = {
    itemsCodec: (value, codecWidget) => {
        return (0, function_1.pipe)(codec.decode(value), O.fromEither, O.chain((r) => {
            const stopIdx = r.key.indexOf("$");
            const name = r.key.substring(0, stopIdx > 0 ? stopIdx : undefined);
            const maybeWidget = codecWidget(name, r.value);
            return O.map((widget) => {
                var _a;
                return {
                    key: r.key,
                    name,
                    maybeLabel: (_a = r.label) !== null && _a !== void 0 ? _a : undefined,
                    widget: widget,
                };
            })(maybeWidget);
        }));
    },
    fromJson: (key, value, fieldTypes, fieldPositions) => {
        if (fieldTypes.get(key) === "Slices") {
            const jsItems = O.getOrElse(() => new Array())(O.fromEither(t.array(t.unknown).decode(value)));
            const widgetCodec = (name, wValue) => SliceWidgetContent_1.SliceWidgetContent.fromJson([key], name, wValue, fieldTypes, fieldPositions);
            return O.some({
                value: A.compact(jsItems.map((jsItem) => exports.SlicesContent.itemsCodec(jsItem, widgetCodec))),
                __TYPE__: exports.SlicesContentType,
            });
        }
        else {
            console.error("fieldTypes.get(key) !== 'Slices'");
            return O.none;
        }
    },
};
