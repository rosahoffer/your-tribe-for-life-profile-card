"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinksTypes = exports.is = exports.BROKEN_CUSTOM_TYPE = exports.LinkContent = exports.ImageLink = exports.FileLink = exports.ExternalLink = exports.DocumentLink = exports.Link = void 0;
const tslib_1 = require("tslib");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const DocumentLink_1 = require("./DocumentLink");
const ExternalLink_1 = require("./ExternalLink");
const FileLink_1 = require("./FileLink");
const ImageLink_1 = require("./ImageLink");
const LinkContent_1 = require("./LinkContent");
exports.Link = t.union([ImageLink_1.ImageLink, FileLink_1.FileLink, DocumentLink_1.DocumentLink, ExternalLink_1.ExternalLink]);
var DocumentLink_2 = require("./DocumentLink");
Object.defineProperty(exports, "DocumentLink", { enumerable: true, get: function () { return DocumentLink_2.DocumentLink; } });
var ExternalLink_2 = require("./ExternalLink");
Object.defineProperty(exports, "ExternalLink", { enumerable: true, get: function () { return ExternalLink_2.ExternalLink; } });
var FileLink_2 = require("./FileLink");
Object.defineProperty(exports, "FileLink", { enumerable: true, get: function () { return FileLink_2.FileLink; } });
var ImageLink_2 = require("./ImageLink");
Object.defineProperty(exports, "ImageLink", { enumerable: true, get: function () { return ImageLink_2.ImageLink; } });
var LinkContent_2 = require("./LinkContent");
Object.defineProperty(exports, "LinkContent", { enumerable: true, get: function () { return LinkContent_2.LinkContent; } });
exports.BROKEN_CUSTOM_TYPE = "broken_type";
exports.is = {
    documentLink: DocumentLink_1.isDocumentLink,
    fileLink: FileLink_1.isFileLink,
    externalLink: ExternalLink_1.isExternalLink,
    imageLink: ImageLink_1.isImageLink,
};
exports.LinksTypes = {
    DocumentLink: DocumentLink_1.DocumentLinkType,
    FileLink: FileLink_1.FileLinkType,
    ExternalLink: ExternalLink_1.ExternalLinkType,
    ImageLink: ImageLink_1.ImageLinkType,
    LinkContent: LinkContent_1.LinkContentType,
};
