import * as t from "io-ts";
import { Block as b, EmbedBlock as eBlock, ImageBlock as iBlock, TextBlock as tBlock } from "../../../documents/widgets/nestable/StructuredTextContent/Block";
export declare const RichTextContent: t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"StructuredTextContent">;
    value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        type: t.LiteralC<"image">;
        data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
            origin: t.ExactC<t.TypeC<{
                id: t.StringC;
                url: t.StringC;
                width: t.NumberC;
                height: t.NumberC;
            }>>;
            width: t.NumberC;
            height: t.NumberC;
            edit: t.TypeC<{
                zoom: t.NumberC;
                crop: t.TypeC<{
                    x: t.NumberC;
                    y: t.NumberC;
                }>;
                background: t.StringC;
            }>;
        }>, t.PartialC<{
            url: t.StringC;
            credits: t.Type<string | null, string | null, unknown>;
            alt: t.Type<string | null, string | null, unknown>;
            provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>, t.PartialC<{
            linkTo: t.UnionC<[t.Type<{
                id: string;
            } | ({
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            }) | ({
                id: string;
                url: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
                size?: string;
            }) | ({
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            }), ({
                id: string;
            } & {
                __TYPE__: "DocumentLink";
            }) | ({
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            } & {
                __TYPE__: "ExternalLink";
            }) | {
                readonly size: string;
                readonly __TYPE__: "FileLink";
                readonly id: string;
                readonly url: string;
                readonly name: string;
                readonly kind: string;
                readonly date?: string | null | undefined;
            } | ({
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            } & {
                __TYPE__: "ImageLink";
            }), unknown>, t.NullC, t.UndefinedC]>;
        }>]>;
    }>, t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
        type: t.LiteralC<"embed">;
        data: t.Type<import("../../../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
    }>, t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
        type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
        content: t.IntersectionC<[t.TypeC<{
            text: t.StringC;
        }>, t.PartialC<{
            spans: t.Type<({
                data?: unknown;
            } & {
                start: number;
                end: number;
                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
            })[], ({
                data?: unknown;
            } & {
                start: number;
                end: number;
                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
            })[], unknown>;
        }>]>;
    }>, t.PartialC<{
        label: t.StringC;
        direction: t.StringC;
    }>]>>]>>;
}>>;
export declare type RichTextContent = t.TypeOf<typeof RichTextContent>;
export declare const RichTextContentType = "StructuredTextContent";
export declare const TextBlock: t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
    content: t.IntersectionC<[t.TypeC<{
        text: t.StringC;
    }>, t.PartialC<{
        spans: t.Type<({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], ({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], unknown>;
    }>]>;
}>, t.PartialC<{
    label: t.StringC;
    direction: t.StringC;
}>]>>;
export declare type TextBlock = tBlock;
export declare const ImageBlock: t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"image">;
    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        origin: t.ExactC<t.TypeC<{
            id: t.StringC;
            url: t.StringC;
            width: t.NumberC;
            height: t.NumberC;
        }>>;
        width: t.NumberC;
        height: t.NumberC;
        edit: t.TypeC<{
            zoom: t.NumberC;
            crop: t.TypeC<{
                x: t.NumberC;
                y: t.NumberC;
            }>;
            background: t.StringC;
        }>;
    }>, t.PartialC<{
        url: t.StringC;
        credits: t.Type<string | null, string | null, unknown>;
        alt: t.Type<string | null, string | null, unknown>;
        provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.PartialC<{
        linkTo: t.UnionC<[t.Type<{
            id: string;
        } | ({
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
            size?: string;
        }) | ({
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }), ({
            id: string;
        } & {
            __TYPE__: "DocumentLink";
        }) | ({
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        } & {
            __TYPE__: "ExternalLink";
        }) | {
            readonly size: string;
            readonly __TYPE__: "FileLink";
            readonly id: string;
            readonly url: string;
            readonly name: string;
            readonly kind: string;
            readonly date?: string | null | undefined;
        } | ({
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "ImageLink";
        }), unknown>, t.NullC, t.UndefinedC]>;
    }>]>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>;
export declare type ImageBlock = iBlock;
export declare const EmbedBlock: t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"embed">;
    data: t.Type<import("../../../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>;
export declare type EmbedBlock = eBlock;
export declare const Block: t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"image">;
    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        origin: t.ExactC<t.TypeC<{
            id: t.StringC;
            url: t.StringC;
            width: t.NumberC;
            height: t.NumberC;
        }>>;
        width: t.NumberC;
        height: t.NumberC;
        edit: t.TypeC<{
            zoom: t.NumberC;
            crop: t.TypeC<{
                x: t.NumberC;
                y: t.NumberC;
            }>;
            background: t.StringC;
        }>;
    }>, t.PartialC<{
        url: t.StringC;
        credits: t.Type<string | null, string | null, unknown>;
        alt: t.Type<string | null, string | null, unknown>;
        provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.PartialC<{
        linkTo: t.UnionC<[t.Type<{
            id: string;
        } | ({
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        }) | ({
            id: string;
            url: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
            size?: string;
        }) | ({
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        }), ({
            id: string;
        } & {
            __TYPE__: "DocumentLink";
        }) | ({
            url: string;
        } & {
            kind?: "web";
            target?: string | null | undefined;
            preview?: {
                title?: string;
            } | null | undefined;
        } & {
            __TYPE__: "ExternalLink";
        }) | {
            readonly size: string;
            readonly __TYPE__: "FileLink";
            readonly id: string;
            readonly url: string;
            readonly name: string;
            readonly kind: string;
            readonly date?: string | null | undefined;
        } | ({
            id: string;
            url: string;
            height: string;
            width: string;
            size: string;
            name: string;
            kind: string;
        } & {
            date?: string | null | undefined;
        } & {
            __TYPE__: "ImageLink";
        }), unknown>, t.NullC, t.UndefinedC]>;
    }>]>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.LiteralC<"embed">;
    data: t.Type<import("../../../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
}>, t.PartialC<{
    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
}>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
    content: t.IntersectionC<[t.TypeC<{
        text: t.StringC;
    }>, t.PartialC<{
        spans: t.Type<({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], ({
            data?: unknown;
        } & {
            start: number;
            end: number;
            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
        })[], unknown>;
    }>]>;
}>, t.PartialC<{
    label: t.StringC;
    direction: t.StringC;
}>]>>]>;
export declare type Block = b;
