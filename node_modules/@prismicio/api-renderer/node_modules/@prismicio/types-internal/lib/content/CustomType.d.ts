import * as t from "io-ts";
import { WidgetKey as KeyForWidgetContent } from "../documents/widgets";
export declare const WidgetKey: t.Type<string, string, unknown>;
export declare type WidgetKey = KeyForWidgetContent;
export declare const CustomTypeContent: t.RecordC<t.Type<string, string, unknown>, t.UnionC<[t.TypeC<{
    __TYPE__: t.LiteralC<"SliceContentType">;
    value: t.ArrayC<t.TypeC<{
        key: t.StringC;
        name: t.StringC;
        maybeLabel: t.UnionC<[t.StringC, t.UndefinedC]>;
        widget: t.UnionC<[t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"CompositeSliceContent">;
            nonRepeat: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"BooleanContent">;
                value: t.BooleanC;
            }>>, t.IntersectionC<[t.Type<{
                embed_url: string;
                type: string;
            } & {
                version?: string | number | null;
                title?: string | null | undefined;
                author_name?: string | null | undefined;
                author_url?: string | null | undefined;
                provider_name?: string | null | undefined;
                provider_url?: string | null | undefined;
                cache_age?: string | number | null;
                thumbnail_url?: string | null | undefined;
                thumbnail_width?: number | null | undefined;
                thumbnail_height?: number | null | undefined;
                html?: string | null | undefined;
            }, {
                embed_url: string;
                type: string;
            } & {
                version?: string | number | null;
                title?: string | null | undefined;
                author_name?: string | null | undefined;
                author_url?: string | null | undefined;
                provider_name?: string | null | undefined;
                provider_url?: string | null | undefined;
                cache_age?: string | number | null;
                thumbnail_url?: string | null | undefined;
                thumbnail_width?: number | null | undefined;
                thumbnail_height?: number | null | undefined;
                html?: string | null | undefined;
            } & {
                __TYPE__: "EmbedContent";
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"EmbedContent">;
                all: t.UnknownC;
            }>>]>, t.ExactC<t.TypeC<{
                type: t.KeyofC<{
                    Text: null;
                    Date: null;
                    Timestamp: null;
                    Color: null;
                    Number: null;
                    Range: null;
                    Select: null;
                }>;
                value: t.Type<string, string, unknown>;
                __TYPE__: t.LiteralC<"FieldContent">;
            }>>, t.IntersectionC<[t.Type<{
                position: {
                    lat: number;
                    lng: number;
                };
            }, {
                position: {
                    lat: number;
                    lng: number;
                };
            } & {
                __TYPE__: "GeoPointContent";
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"GeoPointContent">;
            }>>]>, t.IntersectionC<[t.Type<{
                origin: {
                    id: string;
                    url: string;
                    width: number;
                    height: number;
                };
                width: number;
                height: number;
                edit: {
                    zoom: number;
                    crop: {
                        x: number;
                        y: number;
                    };
                    background: string;
                };
            } & {
                url?: string;
                credits?: string | null;
                alt?: string | null;
                provider?: string | null | undefined;
            } & {
                thumbnails?: {
                    [x: string]: {
                        origin: {
                            id: string;
                            url: string;
                            width: number;
                            height: number;
                        };
                        width: number;
                        height: number;
                        edit: {
                            zoom: number;
                            crop: {
                                x: number;
                                y: number;
                            };
                            background: string;
                        };
                    } & {
                        url?: string;
                        credits?: string | null;
                        alt?: string | null;
                        provider?: string | null | undefined;
                    };
                };
            }, {
                origin: {
                    id: string;
                    url: string;
                    width: number;
                    height: number;
                };
                width: number;
                height: number;
                edit: {
                    zoom: number;
                    crop: {
                        x: number;
                        y: number;
                    };
                    background: string;
                };
            } & {
                url?: string;
                credits?: string | null;
                alt?: string | null;
                provider?: string | null | undefined;
            } & {
                thumbnails?: {
                    [x: string]: {
                        origin: {
                            id: string;
                            url: string;
                            width: number;
                            height: number;
                        };
                        width: number;
                        height: number;
                        edit: {
                            zoom: number;
                            crop: {
                                x: number;
                                y: number;
                            };
                            background: string;
                        };
                    } & {
                        url?: string;
                        credits?: string | null;
                        alt?: string | null;
                        provider?: string | null | undefined;
                    };
                };
            } & {
                __TYPE__: "ImageContent";
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"ImageContent">;
            }>>]>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
                value: t.StringC;
            }>>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"LinkContent">;
                value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"ImageLink">;
                }>>, t.Type<{
                    id: string;
                    url: string;
                    height: string;
                    width: string;
                    size: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                }, {
                    id: string;
                    url: string;
                    height: string;
                    width: string;
                    size: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                } & {
                    __TYPE__: "ImageLink";
                }, unknown>]>, t.IntersectionC<[t.Type<{
                    id: string;
                    url: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                    size?: string;
                }, {
                    readonly size: string;
                    readonly __TYPE__: "FileLink";
                    readonly id: string;
                    readonly url: string;
                    readonly name: string;
                    readonly kind: string;
                    readonly date?: string | null | undefined;
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"FileLink">;
                    size: t.StringC;
                }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"DocumentLink">;
                }>>, t.Type<{
                    id: string;
                }, {
                    id: string;
                } & {
                    __TYPE__: "DocumentLink";
                }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"ExternalLink">;
                }>>, t.Type<{
                    url: string;
                } & {
                    kind?: "web";
                    target?: string | null | undefined;
                    preview?: {
                        title?: string;
                    } | null | undefined;
                }, {
                    url: string;
                } & {
                    kind?: "web";
                    target?: string | null | undefined;
                    preview?: {
                        title?: string;
                    } | null | undefined;
                } & {
                    __TYPE__: "ExternalLink";
                }, unknown>]>]>;
            }>>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"StructuredTextContent">;
                value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<"image">;
                    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                        origin: t.ExactC<t.TypeC<{
                            id: t.StringC;
                            url: t.StringC;
                            width: t.NumberC;
                            height: t.NumberC;
                        }>>;
                        width: t.NumberC;
                        height: t.NumberC;
                        edit: t.TypeC<{
                            zoom: t.NumberC;
                            crop: t.TypeC<{
                                x: t.NumberC;
                                y: t.NumberC;
                            }>;
                            background: t.StringC;
                        }>;
                    }>, t.PartialC<{
                        url: t.StringC;
                        credits: t.Type<string | null, string | null, unknown>;
                        alt: t.Type<string | null, string | null, unknown>;
                        provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.PartialC<{
                        linkTo: t.UnionC<[t.Type<{
                            id: string;
                        } | ({
                            url: string;
                        } & {
                            kind?: "web";
                            target?: string | null | undefined;
                            preview?: {
                                title?: string;
                            } | null | undefined;
                        }) | ({
                            id: string;
                            url: string;
                            name: string;
                            kind: string;
                        } & {
                            date?: string | null | undefined;
                            size?: string;
                        }) | ({
                            id: string;
                            url: string;
                            height: string;
                            width: string;
                            size: string;
                            name: string;
                            kind: string;
                        } & {
                            date?: string | null | undefined;
                        }), ({
                            id: string;
                        } & {
                            __TYPE__: "DocumentLink";
                        }) | ({
                            url: string;
                        } & {
                            kind?: "web";
                            target?: string | null | undefined;
                            preview?: {
                                title?: string;
                            } | null | undefined;
                        } & {
                            __TYPE__: "ExternalLink";
                        }) | {
                            readonly size: string;
                            readonly __TYPE__: "FileLink";
                            readonly id: string;
                            readonly url: string;
                            readonly name: string;
                            readonly kind: string;
                            readonly date?: string | null | undefined;
                        } | ({
                            id: string;
                            url: string;
                            height: string;
                            width: string;
                            size: string;
                            name: string;
                            kind: string;
                        } & {
                            date?: string | null | undefined;
                        } & {
                            __TYPE__: "ImageLink";
                        }), unknown>, t.NullC, t.UndefinedC]>;
                    }>]>;
                }>, t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<"embed">;
                    data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
                }>, t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
                    content: t.IntersectionC<[t.TypeC<{
                        text: t.StringC;
                    }>, t.PartialC<{
                        spans: t.Type<({
                            data?: unknown;
                        } & {
                            start: number;
                            end: number;
                            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                        })[], ({
                            data?: unknown;
                        } & {
                            start: number;
                            end: number;
                            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                        })[], unknown>;
                    }>]>;
                }>, t.PartialC<{
                    label: t.StringC;
                    direction: t.StringC;
                }>]>>]>>;
            }>>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"SeparatorContent">;
            }>>]>>;
            repeat: t.ArrayC<t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"GroupItemContent">;
                value: t.ArrayC<t.TupleC<[t.StringC, t.UnionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"BooleanContent">;
                    value: t.BooleanC;
                }>>, t.IntersectionC<[t.Type<{
                    embed_url: string;
                    type: string;
                } & {
                    version?: string | number | null;
                    title?: string | null | undefined;
                    author_name?: string | null | undefined;
                    author_url?: string | null | undefined;
                    provider_name?: string | null | undefined;
                    provider_url?: string | null | undefined;
                    cache_age?: string | number | null;
                    thumbnail_url?: string | null | undefined;
                    thumbnail_width?: number | null | undefined;
                    thumbnail_height?: number | null | undefined;
                    html?: string | null | undefined;
                }, {
                    embed_url: string;
                    type: string;
                } & {
                    version?: string | number | null;
                    title?: string | null | undefined;
                    author_name?: string | null | undefined;
                    author_url?: string | null | undefined;
                    provider_name?: string | null | undefined;
                    provider_url?: string | null | undefined;
                    cache_age?: string | number | null;
                    thumbnail_url?: string | null | undefined;
                    thumbnail_width?: number | null | undefined;
                    thumbnail_height?: number | null | undefined;
                    html?: string | null | undefined;
                } & {
                    __TYPE__: "EmbedContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"EmbedContent">;
                    all: t.UnknownC;
                }>>]>, t.ExactC<t.TypeC<{
                    type: t.KeyofC<{
                        Text: null;
                        Date: null;
                        Timestamp: null;
                        Color: null;
                        Number: null;
                        Range: null;
                        Select: null;
                    }>;
                    value: t.Type<string, string, unknown>;
                    __TYPE__: t.LiteralC<"FieldContent">;
                }>>, t.IntersectionC<[t.Type<{
                    position: {
                        lat: number;
                        lng: number;
                    };
                }, {
                    position: {
                        lat: number;
                        lng: number;
                    };
                } & {
                    __TYPE__: "GeoPointContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"GeoPointContent">;
                }>>]>, t.IntersectionC<[t.Type<{
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                } & {
                    thumbnails?: {
                        [x: string]: {
                            origin: {
                                id: string;
                                url: string;
                                width: number;
                                height: number;
                            };
                            width: number;
                            height: number;
                            edit: {
                                zoom: number;
                                crop: {
                                    x: number;
                                    y: number;
                                };
                                background: string;
                            };
                        } & {
                            url?: string;
                            credits?: string | null;
                            alt?: string | null;
                            provider?: string | null | undefined;
                        };
                    };
                }, {
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                } & {
                    thumbnails?: {
                        [x: string]: {
                            origin: {
                                id: string;
                                url: string;
                                width: number;
                                height: number;
                            };
                            width: number;
                            height: number;
                            edit: {
                                zoom: number;
                                crop: {
                                    x: number;
                                    y: number;
                                };
                                background: string;
                            };
                        } & {
                            url?: string;
                            credits?: string | null;
                            alt?: string | null;
                            provider?: string | null | undefined;
                        };
                    };
                } & {
                    __TYPE__: "ImageContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"ImageContent">;
                }>>]>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
                    value: t.StringC;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"LinkContent">;
                    value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"ImageLink">;
                    }>>, t.Type<{
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    }, {
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    } & {
                        __TYPE__: "ImageLink";
                    }, unknown>]>, t.IntersectionC<[t.Type<{
                        id: string;
                        url: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                        size?: string;
                    }, {
                        readonly size: string;
                        readonly __TYPE__: "FileLink";
                        readonly id: string;
                        readonly url: string;
                        readonly name: string;
                        readonly kind: string;
                        readonly date?: string | null | undefined;
                    }, unknown>, t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"FileLink">;
                        size: t.StringC;
                    }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"DocumentLink">;
                    }>>, t.Type<{
                        id: string;
                    }, {
                        id: string;
                    } & {
                        __TYPE__: "DocumentLink";
                    }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"ExternalLink">;
                    }>>, t.Type<{
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    }, {
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    } & {
                        __TYPE__: "ExternalLink";
                    }, unknown>]>]>;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"StructuredTextContent">;
                    value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.LiteralC<"image">;
                        data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                            origin: t.ExactC<t.TypeC<{
                                id: t.StringC;
                                url: t.StringC;
                                width: t.NumberC;
                                height: t.NumberC;
                            }>>;
                            width: t.NumberC;
                            height: t.NumberC;
                            edit: t.TypeC<{
                                zoom: t.NumberC;
                                crop: t.TypeC<{
                                    x: t.NumberC;
                                    y: t.NumberC;
                                }>;
                                background: t.StringC;
                            }>;
                        }>, t.PartialC<{
                            url: t.StringC;
                            credits: t.Type<string | null, string | null, unknown>;
                            alt: t.Type<string | null, string | null, unknown>;
                            provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        }>]>>, t.PartialC<{
                            linkTo: t.UnionC<[t.Type<{
                                id: string;
                            } | ({
                                url: string;
                            } & {
                                kind?: "web";
                                target?: string | null | undefined;
                                preview?: {
                                    title?: string;
                                } | null | undefined;
                            }) | ({
                                id: string;
                                url: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                                size?: string;
                            }) | ({
                                id: string;
                                url: string;
                                height: string;
                                width: string;
                                size: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                            }), ({
                                id: string;
                            } & {
                                __TYPE__: "DocumentLink";
                            }) | ({
                                url: string;
                            } & {
                                kind?: "web";
                                target?: string | null | undefined;
                                preview?: {
                                    title?: string;
                                } | null | undefined;
                            } & {
                                __TYPE__: "ExternalLink";
                            }) | {
                                readonly size: string;
                                readonly __TYPE__: "FileLink";
                                readonly id: string;
                                readonly url: string;
                                readonly name: string;
                                readonly kind: string;
                                readonly date?: string | null | undefined;
                            } | ({
                                id: string;
                                url: string;
                                height: string;
                                width: string;
                                size: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                            } & {
                                __TYPE__: "ImageLink";
                            }), unknown>, t.NullC, t.UndefinedC]>;
                        }>]>;
                    }>, t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.LiteralC<"embed">;
                        data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
                    }>, t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
                        content: t.IntersectionC<[t.TypeC<{
                            text: t.StringC;
                        }>, t.PartialC<{
                            spans: t.Type<({
                                data?: unknown;
                            } & {
                                start: number;
                                end: number;
                                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                            })[], ({
                                data?: unknown;
                            } & {
                                start: number;
                                end: number;
                                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                            })[], unknown>;
                        }>]>;
                    }>, t.PartialC<{
                        label: t.StringC;
                        direction: t.StringC;
                    }>]>>]>>;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"SeparatorContent">;
                }>>]>]>>;
            }>>>;
        }>>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"SharedSliceContent">;
            variation: t.StringC;
            primary: t.RecordC<t.StringC, t.UnionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"BooleanContent">;
                value: t.BooleanC;
            }>>, t.IntersectionC<[t.Type<{
                embed_url: string;
                type: string;
            } & {
                version?: string | number | null;
                title?: string | null | undefined;
                author_name?: string | null | undefined;
                author_url?: string | null | undefined;
                provider_name?: string | null | undefined;
                provider_url?: string | null | undefined;
                cache_age?: string | number | null;
                thumbnail_url?: string | null | undefined;
                thumbnail_width?: number | null | undefined;
                thumbnail_height?: number | null | undefined;
                html?: string | null | undefined;
            }, {
                embed_url: string;
                type: string;
            } & {
                version?: string | number | null;
                title?: string | null | undefined;
                author_name?: string | null | undefined;
                author_url?: string | null | undefined;
                provider_name?: string | null | undefined;
                provider_url?: string | null | undefined;
                cache_age?: string | number | null;
                thumbnail_url?: string | null | undefined;
                thumbnail_width?: number | null | undefined;
                thumbnail_height?: number | null | undefined;
                html?: string | null | undefined;
            } & {
                __TYPE__: "EmbedContent";
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"EmbedContent">;
                all: t.UnknownC;
            }>>]>, t.ExactC<t.TypeC<{
                type: t.KeyofC<{
                    Text: null;
                    Date: null;
                    Timestamp: null;
                    Color: null;
                    Number: null;
                    Range: null;
                    Select: null;
                }>;
                value: t.Type<string, string, unknown>;
                __TYPE__: t.LiteralC<"FieldContent">;
            }>>, t.IntersectionC<[t.Type<{
                position: {
                    lat: number;
                    lng: number;
                };
            }, {
                position: {
                    lat: number;
                    lng: number;
                };
            } & {
                __TYPE__: "GeoPointContent";
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"GeoPointContent">;
            }>>]>, t.IntersectionC<[t.Type<{
                origin: {
                    id: string;
                    url: string;
                    width: number;
                    height: number;
                };
                width: number;
                height: number;
                edit: {
                    zoom: number;
                    crop: {
                        x: number;
                        y: number;
                    };
                    background: string;
                };
            } & {
                url?: string;
                credits?: string | null;
                alt?: string | null;
                provider?: string | null | undefined;
            } & {
                thumbnails?: {
                    [x: string]: {
                        origin: {
                            id: string;
                            url: string;
                            width: number;
                            height: number;
                        };
                        width: number;
                        height: number;
                        edit: {
                            zoom: number;
                            crop: {
                                x: number;
                                y: number;
                            };
                            background: string;
                        };
                    } & {
                        url?: string;
                        credits?: string | null;
                        alt?: string | null;
                        provider?: string | null | undefined;
                    };
                };
            }, {
                origin: {
                    id: string;
                    url: string;
                    width: number;
                    height: number;
                };
                width: number;
                height: number;
                edit: {
                    zoom: number;
                    crop: {
                        x: number;
                        y: number;
                    };
                    background: string;
                };
            } & {
                url?: string;
                credits?: string | null;
                alt?: string | null;
                provider?: string | null | undefined;
            } & {
                thumbnails?: {
                    [x: string]: {
                        origin: {
                            id: string;
                            url: string;
                            width: number;
                            height: number;
                        };
                        width: number;
                        height: number;
                        edit: {
                            zoom: number;
                            crop: {
                                x: number;
                                y: number;
                            };
                            background: string;
                        };
                    } & {
                        url?: string;
                        credits?: string | null;
                        alt?: string | null;
                        provider?: string | null | undefined;
                    };
                };
            } & {
                __TYPE__: "ImageContent";
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"ImageContent">;
            }>>]>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
                value: t.StringC;
            }>>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"LinkContent">;
                value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"ImageLink">;
                }>>, t.Type<{
                    id: string;
                    url: string;
                    height: string;
                    width: string;
                    size: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                }, {
                    id: string;
                    url: string;
                    height: string;
                    width: string;
                    size: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                } & {
                    __TYPE__: "ImageLink";
                }, unknown>]>, t.IntersectionC<[t.Type<{
                    id: string;
                    url: string;
                    name: string;
                    kind: string;
                } & {
                    date?: string | null | undefined;
                    size?: string;
                }, {
                    readonly size: string;
                    readonly __TYPE__: "FileLink";
                    readonly id: string;
                    readonly url: string;
                    readonly name: string;
                    readonly kind: string;
                    readonly date?: string | null | undefined;
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"FileLink">;
                    size: t.StringC;
                }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"DocumentLink">;
                }>>, t.Type<{
                    id: string;
                }, {
                    id: string;
                } & {
                    __TYPE__: "DocumentLink";
                }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"ExternalLink">;
                }>>, t.Type<{
                    url: string;
                } & {
                    kind?: "web";
                    target?: string | null | undefined;
                    preview?: {
                        title?: string;
                    } | null | undefined;
                }, {
                    url: string;
                } & {
                    kind?: "web";
                    target?: string | null | undefined;
                    preview?: {
                        title?: string;
                    } | null | undefined;
                } & {
                    __TYPE__: "ExternalLink";
                }, unknown>]>]>;
            }>>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"StructuredTextContent">;
                value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<"image">;
                    data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                        origin: t.ExactC<t.TypeC<{
                            id: t.StringC;
                            url: t.StringC;
                            width: t.NumberC;
                            height: t.NumberC;
                        }>>;
                        width: t.NumberC;
                        height: t.NumberC;
                        edit: t.TypeC<{
                            zoom: t.NumberC;
                            crop: t.TypeC<{
                                x: t.NumberC;
                                y: t.NumberC;
                            }>;
                            background: t.StringC;
                        }>;
                    }>, t.PartialC<{
                        url: t.StringC;
                        credits: t.Type<string | null, string | null, unknown>;
                        alt: t.Type<string | null, string | null, unknown>;
                        provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.PartialC<{
                        linkTo: t.UnionC<[t.Type<{
                            id: string;
                        } | ({
                            url: string;
                        } & {
                            kind?: "web";
                            target?: string | null | undefined;
                            preview?: {
                                title?: string;
                            } | null | undefined;
                        }) | ({
                            id: string;
                            url: string;
                            name: string;
                            kind: string;
                        } & {
                            date?: string | null | undefined;
                            size?: string;
                        }) | ({
                            id: string;
                            url: string;
                            height: string;
                            width: string;
                            size: string;
                            name: string;
                            kind: string;
                        } & {
                            date?: string | null | undefined;
                        }), ({
                            id: string;
                        } & {
                            __TYPE__: "DocumentLink";
                        }) | ({
                            url: string;
                        } & {
                            kind?: "web";
                            target?: string | null | undefined;
                            preview?: {
                                title?: string;
                            } | null | undefined;
                        } & {
                            __TYPE__: "ExternalLink";
                        }) | {
                            readonly size: string;
                            readonly __TYPE__: "FileLink";
                            readonly id: string;
                            readonly url: string;
                            readonly name: string;
                            readonly kind: string;
                            readonly date?: string | null | undefined;
                        } | ({
                            id: string;
                            url: string;
                            height: string;
                            width: string;
                            size: string;
                            name: string;
                            kind: string;
                        } & {
                            date?: string | null | undefined;
                        } & {
                            __TYPE__: "ImageLink";
                        }), unknown>, t.NullC, t.UndefinedC]>;
                    }>]>;
                }>, t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.LiteralC<"embed">;
                    data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
                }>, t.PartialC<{
                    label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                    type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
                    content: t.IntersectionC<[t.TypeC<{
                        text: t.StringC;
                    }>, t.PartialC<{
                        spans: t.Type<({
                            data?: unknown;
                        } & {
                            start: number;
                            end: number;
                            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                        })[], ({
                            data?: unknown;
                        } & {
                            start: number;
                            end: number;
                            type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                        })[], unknown>;
                    }>]>;
                }>, t.PartialC<{
                    label: t.StringC;
                    direction: t.StringC;
                }>]>>]>>;
            }>>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"SeparatorContent">;
            }>>]>>;
            items: t.ArrayC<t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"GroupItemContent">;
                value: t.ArrayC<t.TupleC<[t.StringC, t.UnionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"BooleanContent">;
                    value: t.BooleanC;
                }>>, t.IntersectionC<[t.Type<{
                    embed_url: string;
                    type: string;
                } & {
                    version?: string | number | null;
                    title?: string | null | undefined;
                    author_name?: string | null | undefined;
                    author_url?: string | null | undefined;
                    provider_name?: string | null | undefined;
                    provider_url?: string | null | undefined;
                    cache_age?: string | number | null;
                    thumbnail_url?: string | null | undefined;
                    thumbnail_width?: number | null | undefined;
                    thumbnail_height?: number | null | undefined;
                    html?: string | null | undefined;
                }, {
                    embed_url: string;
                    type: string;
                } & {
                    version?: string | number | null;
                    title?: string | null | undefined;
                    author_name?: string | null | undefined;
                    author_url?: string | null | undefined;
                    provider_name?: string | null | undefined;
                    provider_url?: string | null | undefined;
                    cache_age?: string | number | null;
                    thumbnail_url?: string | null | undefined;
                    thumbnail_width?: number | null | undefined;
                    thumbnail_height?: number | null | undefined;
                    html?: string | null | undefined;
                } & {
                    __TYPE__: "EmbedContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"EmbedContent">;
                    all: t.UnknownC;
                }>>]>, t.ExactC<t.TypeC<{
                    type: t.KeyofC<{
                        Text: null;
                        Date: null;
                        Timestamp: null;
                        Color: null;
                        Number: null;
                        Range: null;
                        Select: null;
                    }>;
                    value: t.Type<string, string, unknown>;
                    __TYPE__: t.LiteralC<"FieldContent">;
                }>>, t.IntersectionC<[t.Type<{
                    position: {
                        lat: number;
                        lng: number;
                    };
                }, {
                    position: {
                        lat: number;
                        lng: number;
                    };
                } & {
                    __TYPE__: "GeoPointContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"GeoPointContent">;
                }>>]>, t.IntersectionC<[t.Type<{
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                } & {
                    thumbnails?: {
                        [x: string]: {
                            origin: {
                                id: string;
                                url: string;
                                width: number;
                                height: number;
                            };
                            width: number;
                            height: number;
                            edit: {
                                zoom: number;
                                crop: {
                                    x: number;
                                    y: number;
                                };
                                background: string;
                            };
                        } & {
                            url?: string;
                            credits?: string | null;
                            alt?: string | null;
                            provider?: string | null | undefined;
                        };
                    };
                }, {
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                } & {
                    thumbnails?: {
                        [x: string]: {
                            origin: {
                                id: string;
                                url: string;
                                width: number;
                                height: number;
                            };
                            width: number;
                            height: number;
                            edit: {
                                zoom: number;
                                crop: {
                                    x: number;
                                    y: number;
                                };
                                background: string;
                            };
                        } & {
                            url?: string;
                            credits?: string | null;
                            alt?: string | null;
                            provider?: string | null | undefined;
                        };
                    };
                } & {
                    __TYPE__: "ImageContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"ImageContent">;
                }>>]>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
                    value: t.StringC;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"LinkContent">;
                    value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"ImageLink">;
                    }>>, t.Type<{
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    }, {
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    } & {
                        __TYPE__: "ImageLink";
                    }, unknown>]>, t.IntersectionC<[t.Type<{
                        id: string;
                        url: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                        size?: string;
                    }, {
                        readonly size: string;
                        readonly __TYPE__: "FileLink";
                        readonly id: string;
                        readonly url: string;
                        readonly name: string;
                        readonly kind: string;
                        readonly date?: string | null | undefined;
                    }, unknown>, t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"FileLink">;
                        size: t.StringC;
                    }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"DocumentLink">;
                    }>>, t.Type<{
                        id: string;
                    }, {
                        id: string;
                    } & {
                        __TYPE__: "DocumentLink";
                    }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"ExternalLink">;
                    }>>, t.Type<{
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    }, {
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    } & {
                        __TYPE__: "ExternalLink";
                    }, unknown>]>]>;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"StructuredTextContent">;
                    value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.LiteralC<"image">;
                        data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                            origin: t.ExactC<t.TypeC<{
                                id: t.StringC;
                                url: t.StringC;
                                width: t.NumberC;
                                height: t.NumberC;
                            }>>;
                            width: t.NumberC;
                            height: t.NumberC;
                            edit: t.TypeC<{
                                zoom: t.NumberC;
                                crop: t.TypeC<{
                                    x: t.NumberC;
                                    y: t.NumberC;
                                }>;
                                background: t.StringC;
                            }>;
                        }>, t.PartialC<{
                            url: t.StringC;
                            credits: t.Type<string | null, string | null, unknown>;
                            alt: t.Type<string | null, string | null, unknown>;
                            provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        }>]>>, t.PartialC<{
                            linkTo: t.UnionC<[t.Type<{
                                id: string;
                            } | ({
                                url: string;
                            } & {
                                kind?: "web";
                                target?: string | null | undefined;
                                preview?: {
                                    title?: string;
                                } | null | undefined;
                            }) | ({
                                id: string;
                                url: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                                size?: string;
                            }) | ({
                                id: string;
                                url: string;
                                height: string;
                                width: string;
                                size: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                            }), ({
                                id: string;
                            } & {
                                __TYPE__: "DocumentLink";
                            }) | ({
                                url: string;
                            } & {
                                kind?: "web";
                                target?: string | null | undefined;
                                preview?: {
                                    title?: string;
                                } | null | undefined;
                            } & {
                                __TYPE__: "ExternalLink";
                            }) | {
                                readonly size: string;
                                readonly __TYPE__: "FileLink";
                                readonly id: string;
                                readonly url: string;
                                readonly name: string;
                                readonly kind: string;
                                readonly date?: string | null | undefined;
                            } | ({
                                id: string;
                                url: string;
                                height: string;
                                width: string;
                                size: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                            } & {
                                __TYPE__: "ImageLink";
                            }), unknown>, t.NullC, t.UndefinedC]>;
                        }>]>;
                    }>, t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.LiteralC<"embed">;
                        data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
                    }>, t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
                        content: t.IntersectionC<[t.TypeC<{
                            text: t.StringC;
                        }>, t.PartialC<{
                            spans: t.Type<({
                                data?: unknown;
                            } & {
                                start: number;
                                end: number;
                                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                            })[], ({
                                data?: unknown;
                            } & {
                                start: number;
                                end: number;
                                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                            })[], unknown>;
                        }>]>;
                    }>, t.PartialC<{
                        label: t.StringC;
                        direction: t.StringC;
                    }>]>>]>>;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"SeparatorContent">;
                }>>]>]>>;
            }>>>;
        }>>, t.UnionC<[t.UnionC<[t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"BooleanContent">;
            value: t.BooleanC;
        }>>, t.IntersectionC<[t.Type<{
            embed_url: string;
            type: string;
        } & {
            version?: string | number | null;
            title?: string | null | undefined;
            author_name?: string | null | undefined;
            author_url?: string | null | undefined;
            provider_name?: string | null | undefined;
            provider_url?: string | null | undefined;
            cache_age?: string | number | null;
            thumbnail_url?: string | null | undefined;
            thumbnail_width?: number | null | undefined;
            thumbnail_height?: number | null | undefined;
            html?: string | null | undefined;
        }, {
            embed_url: string;
            type: string;
        } & {
            version?: string | number | null;
            title?: string | null | undefined;
            author_name?: string | null | undefined;
            author_url?: string | null | undefined;
            provider_name?: string | null | undefined;
            provider_url?: string | null | undefined;
            cache_age?: string | number | null;
            thumbnail_url?: string | null | undefined;
            thumbnail_width?: number | null | undefined;
            thumbnail_height?: number | null | undefined;
            html?: string | null | undefined;
        } & {
            __TYPE__: "EmbedContent";
        }, unknown>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"EmbedContent">;
            all: t.UnknownC;
        }>>]>, t.ExactC<t.TypeC<{
            type: t.KeyofC<{
                Text: null;
                Date: null;
                Timestamp: null;
                Color: null;
                Number: null;
                Range: null;
                Select: null;
            }>;
            value: t.Type<string, string, unknown>;
            __TYPE__: t.LiteralC<"FieldContent">;
        }>>, t.IntersectionC<[t.Type<{
            position: {
                lat: number;
                lng: number;
            };
        }, {
            position: {
                lat: number;
                lng: number;
            };
        } & {
            __TYPE__: "GeoPointContent";
        }, unknown>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"GeoPointContent">;
        }>>]>, t.IntersectionC<[t.Type<{
            origin: {
                id: string;
                url: string;
                width: number;
                height: number;
            };
            width: number;
            height: number;
            edit: {
                zoom: number;
                crop: {
                    x: number;
                    y: number;
                };
                background: string;
            };
        } & {
            url?: string;
            credits?: string | null;
            alt?: string | null;
            provider?: string | null | undefined;
        } & {
            thumbnails?: {
                [x: string]: {
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                };
            };
        }, {
            origin: {
                id: string;
                url: string;
                width: number;
                height: number;
            };
            width: number;
            height: number;
            edit: {
                zoom: number;
                crop: {
                    x: number;
                    y: number;
                };
                background: string;
            };
        } & {
            url?: string;
            credits?: string | null;
            alt?: string | null;
            provider?: string | null | undefined;
        } & {
            thumbnails?: {
                [x: string]: {
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                };
            };
        } & {
            __TYPE__: "ImageContent";
        }, unknown>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"ImageContent">;
        }>>]>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
            value: t.StringC;
        }>>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"LinkContent">;
            value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"ImageLink">;
            }>>, t.Type<{
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            }, {
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            } & {
                __TYPE__: "ImageLink";
            }, unknown>]>, t.IntersectionC<[t.Type<{
                id: string;
                url: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
                size?: string;
            }, {
                readonly size: string;
                readonly __TYPE__: "FileLink";
                readonly id: string;
                readonly url: string;
                readonly name: string;
                readonly kind: string;
                readonly date?: string | null | undefined;
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"FileLink">;
                size: t.StringC;
            }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"DocumentLink">;
            }>>, t.Type<{
                id: string;
            }, {
                id: string;
            } & {
                __TYPE__: "DocumentLink";
            }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"ExternalLink">;
            }>>, t.Type<{
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            }, {
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            } & {
                __TYPE__: "ExternalLink";
            }, unknown>]>]>;
        }>>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"StructuredTextContent">;
            value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<"image">;
                data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    origin: t.ExactC<t.TypeC<{
                        id: t.StringC;
                        url: t.StringC;
                        width: t.NumberC;
                        height: t.NumberC;
                    }>>;
                    width: t.NumberC;
                    height: t.NumberC;
                    edit: t.TypeC<{
                        zoom: t.NumberC;
                        crop: t.TypeC<{
                            x: t.NumberC;
                            y: t.NumberC;
                        }>;
                        background: t.StringC;
                    }>;
                }>, t.PartialC<{
                    url: t.StringC;
                    credits: t.Type<string | null, string | null, unknown>;
                    alt: t.Type<string | null, string | null, unknown>;
                    provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>]>>, t.PartialC<{
                    linkTo: t.UnionC<[t.Type<{
                        id: string;
                    } | ({
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    }) | ({
                        id: string;
                        url: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                        size?: string;
                    }) | ({
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    }), ({
                        id: string;
                    } & {
                        __TYPE__: "DocumentLink";
                    }) | ({
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    } & {
                        __TYPE__: "ExternalLink";
                    }) | {
                        readonly size: string;
                        readonly __TYPE__: "FileLink";
                        readonly id: string;
                        readonly url: string;
                        readonly name: string;
                        readonly kind: string;
                        readonly date?: string | null | undefined;
                    } | ({
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    } & {
                        __TYPE__: "ImageLink";
                    }), unknown>, t.NullC, t.UndefinedC]>;
                }>]>;
            }>, t.PartialC<{
                label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<"embed">;
                data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
            }>, t.PartialC<{
                label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
                content: t.IntersectionC<[t.TypeC<{
                    text: t.StringC;
                }>, t.PartialC<{
                    spans: t.Type<({
                        data?: unknown;
                    } & {
                        start: number;
                        end: number;
                        type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                    })[], ({
                        data?: unknown;
                    } & {
                        start: number;
                        end: number;
                        type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                    })[], unknown>;
                }>]>;
            }>, t.PartialC<{
                label: t.StringC;
                direction: t.StringC;
            }>]>>]>>;
        }>>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"SeparatorContent">;
        }>>]>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"GroupContentType">;
            value: t.ArrayC<t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"GroupItemContent">;
                value: t.ArrayC<t.TupleC<[t.StringC, t.UnionC<[t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"BooleanContent">;
                    value: t.BooleanC;
                }>>, t.IntersectionC<[t.Type<{
                    embed_url: string;
                    type: string;
                } & {
                    version?: string | number | null;
                    title?: string | null | undefined;
                    author_name?: string | null | undefined;
                    author_url?: string | null | undefined;
                    provider_name?: string | null | undefined;
                    provider_url?: string | null | undefined;
                    cache_age?: string | number | null;
                    thumbnail_url?: string | null | undefined;
                    thumbnail_width?: number | null | undefined;
                    thumbnail_height?: number | null | undefined;
                    html?: string | null | undefined;
                }, {
                    embed_url: string;
                    type: string;
                } & {
                    version?: string | number | null;
                    title?: string | null | undefined;
                    author_name?: string | null | undefined;
                    author_url?: string | null | undefined;
                    provider_name?: string | null | undefined;
                    provider_url?: string | null | undefined;
                    cache_age?: string | number | null;
                    thumbnail_url?: string | null | undefined;
                    thumbnail_width?: number | null | undefined;
                    thumbnail_height?: number | null | undefined;
                    html?: string | null | undefined;
                } & {
                    __TYPE__: "EmbedContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"EmbedContent">;
                    all: t.UnknownC;
                }>>]>, t.ExactC<t.TypeC<{
                    type: t.KeyofC<{
                        Text: null;
                        Date: null;
                        Timestamp: null;
                        Color: null;
                        Number: null;
                        Range: null;
                        Select: null;
                    }>;
                    value: t.Type<string, string, unknown>;
                    __TYPE__: t.LiteralC<"FieldContent">;
                }>>, t.IntersectionC<[t.Type<{
                    position: {
                        lat: number;
                        lng: number;
                    };
                }, {
                    position: {
                        lat: number;
                        lng: number;
                    };
                } & {
                    __TYPE__: "GeoPointContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"GeoPointContent">;
                }>>]>, t.IntersectionC<[t.Type<{
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                } & {
                    thumbnails?: {
                        [x: string]: {
                            origin: {
                                id: string;
                                url: string;
                                width: number;
                                height: number;
                            };
                            width: number;
                            height: number;
                            edit: {
                                zoom: number;
                                crop: {
                                    x: number;
                                    y: number;
                                };
                                background: string;
                            };
                        } & {
                            url?: string;
                            credits?: string | null;
                            alt?: string | null;
                            provider?: string | null | undefined;
                        };
                    };
                }, {
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                } & {
                    thumbnails?: {
                        [x: string]: {
                            origin: {
                                id: string;
                                url: string;
                                width: number;
                                height: number;
                            };
                            width: number;
                            height: number;
                            edit: {
                                zoom: number;
                                crop: {
                                    x: number;
                                    y: number;
                                };
                                background: string;
                            };
                        } & {
                            url?: string;
                            credits?: string | null;
                            alt?: string | null;
                            provider?: string | null | undefined;
                        };
                    };
                } & {
                    __TYPE__: "ImageContent";
                }, unknown>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"ImageContent">;
                }>>]>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
                    value: t.StringC;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"LinkContent">;
                    value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"ImageLink">;
                    }>>, t.Type<{
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    }, {
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    } & {
                        __TYPE__: "ImageLink";
                    }, unknown>]>, t.IntersectionC<[t.Type<{
                        id: string;
                        url: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                        size?: string;
                    }, {
                        readonly size: string;
                        readonly __TYPE__: "FileLink";
                        readonly id: string;
                        readonly url: string;
                        readonly name: string;
                        readonly kind: string;
                        readonly date?: string | null | undefined;
                    }, unknown>, t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"FileLink">;
                        size: t.StringC;
                    }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"DocumentLink">;
                    }>>, t.Type<{
                        id: string;
                    }, {
                        id: string;
                    } & {
                        __TYPE__: "DocumentLink";
                    }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                        __TYPE__: t.LiteralC<"ExternalLink">;
                    }>>, t.Type<{
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    }, {
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    } & {
                        __TYPE__: "ExternalLink";
                    }, unknown>]>]>;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"StructuredTextContent">;
                    value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.LiteralC<"image">;
                        data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                            origin: t.ExactC<t.TypeC<{
                                id: t.StringC;
                                url: t.StringC;
                                width: t.NumberC;
                                height: t.NumberC;
                            }>>;
                            width: t.NumberC;
                            height: t.NumberC;
                            edit: t.TypeC<{
                                zoom: t.NumberC;
                                crop: t.TypeC<{
                                    x: t.NumberC;
                                    y: t.NumberC;
                                }>;
                                background: t.StringC;
                            }>;
                        }>, t.PartialC<{
                            url: t.StringC;
                            credits: t.Type<string | null, string | null, unknown>;
                            alt: t.Type<string | null, string | null, unknown>;
                            provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        }>]>>, t.PartialC<{
                            linkTo: t.UnionC<[t.Type<{
                                id: string;
                            } | ({
                                url: string;
                            } & {
                                kind?: "web";
                                target?: string | null | undefined;
                                preview?: {
                                    title?: string;
                                } | null | undefined;
                            }) | ({
                                id: string;
                                url: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                                size?: string;
                            }) | ({
                                id: string;
                                url: string;
                                height: string;
                                width: string;
                                size: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                            }), ({
                                id: string;
                            } & {
                                __TYPE__: "DocumentLink";
                            }) | ({
                                url: string;
                            } & {
                                kind?: "web";
                                target?: string | null | undefined;
                                preview?: {
                                    title?: string;
                                } | null | undefined;
                            } & {
                                __TYPE__: "ExternalLink";
                            }) | {
                                readonly size: string;
                                readonly __TYPE__: "FileLink";
                                readonly id: string;
                                readonly url: string;
                                readonly name: string;
                                readonly kind: string;
                                readonly date?: string | null | undefined;
                            } | ({
                                id: string;
                                url: string;
                                height: string;
                                width: string;
                                size: string;
                                name: string;
                                kind: string;
                            } & {
                                date?: string | null | undefined;
                            } & {
                                __TYPE__: "ImageLink";
                            }), unknown>, t.NullC, t.UndefinedC]>;
                        }>]>;
                    }>, t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.LiteralC<"embed">;
                        data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
                    }>, t.PartialC<{
                        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                        type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
                        content: t.IntersectionC<[t.TypeC<{
                            text: t.StringC;
                        }>, t.PartialC<{
                            spans: t.Type<({
                                data?: unknown;
                            } & {
                                start: number;
                                end: number;
                                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                            })[], ({
                                data?: unknown;
                            } & {
                                start: number;
                                end: number;
                                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                            })[], unknown>;
                        }>]>;
                    }>, t.PartialC<{
                        label: t.StringC;
                        direction: t.StringC;
                    }>]>>]>>;
                }>>, t.ExactC<t.TypeC<{
                    __TYPE__: t.LiteralC<"SeparatorContent">;
                }>>]>]>>;
            }>>>;
        }>>]>]>;
    }>>;
}>, t.TypeC<{
    __TYPE__: t.LiteralC<"UIDContent">;
    value: t.StringC;
}>, t.UnionC<[t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"BooleanContent">;
    value: t.BooleanC;
}>>, t.IntersectionC<[t.Type<{
    embed_url: string;
    type: string;
} & {
    version?: string | number | null;
    title?: string | null | undefined;
    author_name?: string | null | undefined;
    author_url?: string | null | undefined;
    provider_name?: string | null | undefined;
    provider_url?: string | null | undefined;
    cache_age?: string | number | null;
    thumbnail_url?: string | null | undefined;
    thumbnail_width?: number | null | undefined;
    thumbnail_height?: number | null | undefined;
    html?: string | null | undefined;
}, {
    embed_url: string;
    type: string;
} & {
    version?: string | number | null;
    title?: string | null | undefined;
    author_name?: string | null | undefined;
    author_url?: string | null | undefined;
    provider_name?: string | null | undefined;
    provider_url?: string | null | undefined;
    cache_age?: string | number | null;
    thumbnail_url?: string | null | undefined;
    thumbnail_width?: number | null | undefined;
    thumbnail_height?: number | null | undefined;
    html?: string | null | undefined;
} & {
    __TYPE__: "EmbedContent";
}, unknown>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"EmbedContent">;
    all: t.UnknownC;
}>>]>, t.ExactC<t.TypeC<{
    type: t.KeyofC<{
        Text: null;
        Date: null;
        Timestamp: null;
        Color: null;
        Number: null;
        Range: null;
        Select: null;
    }>;
    value: t.Type<string, string, unknown>;
    __TYPE__: t.LiteralC<"FieldContent">;
}>>, t.IntersectionC<[t.Type<{
    position: {
        lat: number;
        lng: number;
    };
}, {
    position: {
        lat: number;
        lng: number;
    };
} & {
    __TYPE__: "GeoPointContent";
}, unknown>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"GeoPointContent">;
}>>]>, t.IntersectionC<[t.Type<{
    origin: {
        id: string;
        url: string;
        width: number;
        height: number;
    };
    width: number;
    height: number;
    edit: {
        zoom: number;
        crop: {
            x: number;
            y: number;
        };
        background: string;
    };
} & {
    url?: string;
    credits?: string | null;
    alt?: string | null;
    provider?: string | null | undefined;
} & {
    thumbnails?: {
        [x: string]: {
            origin: {
                id: string;
                url: string;
                width: number;
                height: number;
            };
            width: number;
            height: number;
            edit: {
                zoom: number;
                crop: {
                    x: number;
                    y: number;
                };
                background: string;
            };
        } & {
            url?: string;
            credits?: string | null;
            alt?: string | null;
            provider?: string | null | undefined;
        };
    };
}, {
    origin: {
        id: string;
        url: string;
        width: number;
        height: number;
    };
    width: number;
    height: number;
    edit: {
        zoom: number;
        crop: {
            x: number;
            y: number;
        };
        background: string;
    };
} & {
    url?: string;
    credits?: string | null;
    alt?: string | null;
    provider?: string | null | undefined;
} & {
    thumbnails?: {
        [x: string]: {
            origin: {
                id: string;
                url: string;
                width: number;
                height: number;
            };
            width: number;
            height: number;
            edit: {
                zoom: number;
                crop: {
                    x: number;
                    y: number;
                };
                background: string;
            };
        } & {
            url?: string;
            credits?: string | null;
            alt?: string | null;
            provider?: string | null | undefined;
        };
    };
} & {
    __TYPE__: "ImageContent";
}, unknown>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"ImageContent">;
}>>]>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
    value: t.StringC;
}>>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"LinkContent">;
    value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"ImageLink">;
    }>>, t.Type<{
        id: string;
        url: string;
        height: string;
        width: string;
        size: string;
        name: string;
        kind: string;
    } & {
        date?: string | null | undefined;
    }, {
        id: string;
        url: string;
        height: string;
        width: string;
        size: string;
        name: string;
        kind: string;
    } & {
        date?: string | null | undefined;
    } & {
        __TYPE__: "ImageLink";
    }, unknown>]>, t.IntersectionC<[t.Type<{
        id: string;
        url: string;
        name: string;
        kind: string;
    } & {
        date?: string | null | undefined;
        size?: string;
    }, {
        readonly size: string;
        readonly __TYPE__: "FileLink";
        readonly id: string;
        readonly url: string;
        readonly name: string;
        readonly kind: string;
        readonly date?: string | null | undefined;
    }, unknown>, t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"FileLink">;
        size: t.StringC;
    }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"DocumentLink">;
    }>>, t.Type<{
        id: string;
    }, {
        id: string;
    } & {
        __TYPE__: "DocumentLink";
    }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"ExternalLink">;
    }>>, t.Type<{
        url: string;
    } & {
        kind?: "web";
        target?: string | null | undefined;
        preview?: {
            title?: string;
        } | null | undefined;
    }, {
        url: string;
    } & {
        kind?: "web";
        target?: string | null | undefined;
        preview?: {
            title?: string;
        } | null | undefined;
    } & {
        __TYPE__: "ExternalLink";
    }, unknown>]>]>;
}>>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"StructuredTextContent">;
    value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
        type: t.LiteralC<"image">;
        data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
            origin: t.ExactC<t.TypeC<{
                id: t.StringC;
                url: t.StringC;
                width: t.NumberC;
                height: t.NumberC;
            }>>;
            width: t.NumberC;
            height: t.NumberC;
            edit: t.TypeC<{
                zoom: t.NumberC;
                crop: t.TypeC<{
                    x: t.NumberC;
                    y: t.NumberC;
                }>;
                background: t.StringC;
            }>;
        }>, t.PartialC<{
            url: t.StringC;
            credits: t.Type<string | null, string | null, unknown>;
            alt: t.Type<string | null, string | null, unknown>;
            provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        }>]>>, t.PartialC<{
            linkTo: t.UnionC<[t.Type<{
                id: string;
            } | ({
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            }) | ({
                id: string;
                url: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
                size?: string;
            }) | ({
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            }), ({
                id: string;
            } & {
                __TYPE__: "DocumentLink";
            }) | ({
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            } & {
                __TYPE__: "ExternalLink";
            }) | {
                readonly size: string;
                readonly __TYPE__: "FileLink";
                readonly id: string;
                readonly url: string;
                readonly name: string;
                readonly kind: string;
                readonly date?: string | null | undefined;
            } | ({
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            } & {
                __TYPE__: "ImageLink";
            }), unknown>, t.NullC, t.UndefinedC]>;
        }>]>;
    }>, t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
        type: t.LiteralC<"embed">;
        data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
    }>, t.PartialC<{
        label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
        direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
    }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
        type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
        content: t.IntersectionC<[t.TypeC<{
            text: t.StringC;
        }>, t.PartialC<{
            spans: t.Type<({
                data?: unknown;
            } & {
                start: number;
                end: number;
                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
            })[], ({
                data?: unknown;
            } & {
                start: number;
                end: number;
                type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
            })[], unknown>;
        }>]>;
    }>, t.PartialC<{
        label: t.StringC;
        direction: t.StringC;
    }>]>>]>>;
}>>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"SeparatorContent">;
}>>]>, t.ExactC<t.TypeC<{
    __TYPE__: t.LiteralC<"GroupContentType">;
    value: t.ArrayC<t.ExactC<t.TypeC<{
        __TYPE__: t.LiteralC<"GroupItemContent">;
        value: t.ArrayC<t.TupleC<[t.StringC, t.UnionC<[t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"BooleanContent">;
            value: t.BooleanC;
        }>>, t.IntersectionC<[t.Type<{
            embed_url: string;
            type: string;
        } & {
            version?: string | number | null;
            title?: string | null | undefined;
            author_name?: string | null | undefined;
            author_url?: string | null | undefined;
            provider_name?: string | null | undefined;
            provider_url?: string | null | undefined;
            cache_age?: string | number | null;
            thumbnail_url?: string | null | undefined;
            thumbnail_width?: number | null | undefined;
            thumbnail_height?: number | null | undefined;
            html?: string | null | undefined;
        }, {
            embed_url: string;
            type: string;
        } & {
            version?: string | number | null;
            title?: string | null | undefined;
            author_name?: string | null | undefined;
            author_url?: string | null | undefined;
            provider_name?: string | null | undefined;
            provider_url?: string | null | undefined;
            cache_age?: string | number | null;
            thumbnail_url?: string | null | undefined;
            thumbnail_width?: number | null | undefined;
            thumbnail_height?: number | null | undefined;
            html?: string | null | undefined;
        } & {
            __TYPE__: "EmbedContent";
        }, unknown>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"EmbedContent">;
            all: t.UnknownC;
        }>>]>, t.ExactC<t.TypeC<{
            type: t.KeyofC<{
                Text: null;
                Date: null;
                Timestamp: null;
                Color: null;
                Number: null;
                Range: null;
                Select: null;
            }>;
            value: t.Type<string, string, unknown>;
            __TYPE__: t.LiteralC<"FieldContent">;
        }>>, t.IntersectionC<[t.Type<{
            position: {
                lat: number;
                lng: number;
            };
        }, {
            position: {
                lat: number;
                lng: number;
            };
        } & {
            __TYPE__: "GeoPointContent";
        }, unknown>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"GeoPointContent">;
        }>>]>, t.IntersectionC<[t.Type<{
            origin: {
                id: string;
                url: string;
                width: number;
                height: number;
            };
            width: number;
            height: number;
            edit: {
                zoom: number;
                crop: {
                    x: number;
                    y: number;
                };
                background: string;
            };
        } & {
            url?: string;
            credits?: string | null;
            alt?: string | null;
            provider?: string | null | undefined;
        } & {
            thumbnails?: {
                [x: string]: {
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                };
            };
        }, {
            origin: {
                id: string;
                url: string;
                width: number;
                height: number;
            };
            width: number;
            height: number;
            edit: {
                zoom: number;
                crop: {
                    x: number;
                    y: number;
                };
                background: string;
            };
        } & {
            url?: string;
            credits?: string | null;
            alt?: string | null;
            provider?: string | null | undefined;
        } & {
            thumbnails?: {
                [x: string]: {
                    origin: {
                        id: string;
                        url: string;
                        width: number;
                        height: number;
                    };
                    width: number;
                    height: number;
                    edit: {
                        zoom: number;
                        crop: {
                            x: number;
                            y: number;
                        };
                        background: string;
                    };
                } & {
                    url?: string;
                    credits?: string | null;
                    alt?: string | null;
                    provider?: string | null | undefined;
                };
            };
        } & {
            __TYPE__: "ImageContent";
        }, unknown>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"ImageContent">;
        }>>]>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"IntegrationFieldsContent">;
            value: t.StringC;
        }>>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"LinkContent">;
            value: t.UnionC<[t.IntersectionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"ImageLink">;
            }>>, t.Type<{
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            }, {
                id: string;
                url: string;
                height: string;
                width: string;
                size: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
            } & {
                __TYPE__: "ImageLink";
            }, unknown>]>, t.IntersectionC<[t.Type<{
                id: string;
                url: string;
                name: string;
                kind: string;
            } & {
                date?: string | null | undefined;
                size?: string;
            }, {
                readonly size: string;
                readonly __TYPE__: "FileLink";
                readonly id: string;
                readonly url: string;
                readonly name: string;
                readonly kind: string;
                readonly date?: string | null | undefined;
            }, unknown>, t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"FileLink">;
                size: t.StringC;
            }>>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"DocumentLink">;
            }>>, t.Type<{
                id: string;
            }, {
                id: string;
            } & {
                __TYPE__: "DocumentLink";
            }, unknown>]>, t.IntersectionC<[t.ExactC<t.TypeC<{
                __TYPE__: t.LiteralC<"ExternalLink">;
            }>>, t.Type<{
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            }, {
                url: string;
            } & {
                kind?: "web";
                target?: string | null | undefined;
                preview?: {
                    title?: string;
                } | null | undefined;
            } & {
                __TYPE__: "ExternalLink";
            }, unknown>]>]>;
        }>>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"StructuredTextContent">;
            value: t.ArrayC<t.UnionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<"image">;
                data: t.IntersectionC<[t.ExactC<t.IntersectionC<[t.TypeC<{
                    origin: t.ExactC<t.TypeC<{
                        id: t.StringC;
                        url: t.StringC;
                        width: t.NumberC;
                        height: t.NumberC;
                    }>>;
                    width: t.NumberC;
                    height: t.NumberC;
                    edit: t.TypeC<{
                        zoom: t.NumberC;
                        crop: t.TypeC<{
                            x: t.NumberC;
                            y: t.NumberC;
                        }>;
                        background: t.StringC;
                    }>;
                }>, t.PartialC<{
                    url: t.StringC;
                    credits: t.Type<string | null, string | null, unknown>;
                    alt: t.Type<string | null, string | null, unknown>;
                    provider: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                }>]>>, t.PartialC<{
                    linkTo: t.UnionC<[t.Type<{
                        id: string;
                    } | ({
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    }) | ({
                        id: string;
                        url: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                        size?: string;
                    }) | ({
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    }), ({
                        id: string;
                    } & {
                        __TYPE__: "DocumentLink";
                    }) | ({
                        url: string;
                    } & {
                        kind?: "web";
                        target?: string | null | undefined;
                        preview?: {
                            title?: string;
                        } | null | undefined;
                    } & {
                        __TYPE__: "ExternalLink";
                    }) | {
                        readonly size: string;
                        readonly __TYPE__: "FileLink";
                        readonly id: string;
                        readonly url: string;
                        readonly name: string;
                        readonly kind: string;
                        readonly date?: string | null | undefined;
                    } | ({
                        id: string;
                        url: string;
                        height: string;
                        width: string;
                        size: string;
                        name: string;
                        kind: string;
                    } & {
                        date?: string | null | undefined;
                    } & {
                        __TYPE__: "ImageLink";
                    }), unknown>, t.NullC, t.UndefinedC]>;
                }>]>;
            }>, t.PartialC<{
                label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.LiteralC<"embed">;
                data: t.Type<import("../documents/widgets/nestable").EmbedContentO, unknown, unknown>;
            }>, t.PartialC<{
                label: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
                direction: t.UnionC<[t.Type<string, string, unknown>, t.NullC, t.UndefinedC]>;
            }>]>>, t.ExactC<t.IntersectionC<[t.TypeC<{
                type: t.Type<"paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl", unknown>;
                content: t.IntersectionC<[t.TypeC<{
                    text: t.StringC;
                }>, t.PartialC<{
                    spans: t.Type<({
                        data?: unknown;
                    } & {
                        start: number;
                        end: number;
                        type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                    })[], ({
                        data?: unknown;
                    } & {
                        start: number;
                        end: number;
                        type: "label" | "paragraph" | "heading1" | "heading2" | "heading3" | "heading4" | "heading5" | "heading6" | "strong" | "em" | "preformatted" | "hyperlink" | "image" | "embed" | "list-item" | "o-list-item" | "rtl";
                    })[], unknown>;
                }>]>;
            }>, t.PartialC<{
                label: t.StringC;
                direction: t.StringC;
            }>]>>]>>;
        }>>, t.ExactC<t.TypeC<{
            __TYPE__: t.LiteralC<"SeparatorContent">;
        }>>]>]>>;
    }>>>;
}>>]>>;
export declare type CustomTypeContent = t.TypeOf<typeof CustomTypeContent>;
