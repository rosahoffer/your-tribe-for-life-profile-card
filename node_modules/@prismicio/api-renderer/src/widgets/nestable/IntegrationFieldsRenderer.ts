import type { IntegrationFieldsContent } from "@prismicio/types-internal/lib/documents/widgets/nestable"

import type { IntegrationFieldDefO, Renderer } from "../../models"
import type RenderContext from "../../models/RenderContext"

const IntegrationFieldRenderer: (ctx: RenderContext) => Renderer<IntegrationFieldDefO, IntegrationFieldsContent> = (
	ctx,
) => ({
	renderV1(content: IntegrationFieldsContent): unknown {
		try {
			return {
				type: "IntegrationFields",
				value: ctx.Extension.encoders.integrationFields.encode(content.value),
			}
		} catch (e) {
			//todo report error somewhere
			return {
				value: {},
			}
		}
	},

	renderV2(_def: IntegrationFieldDefO, content: IntegrationFieldsContent): unknown {
		try {
			return ctx.Extension.encoders.integrationFields.encode(content.value)
		} catch (e) {
			//todo report error somewhere
			return {}
		}
	},

	renderDefault(_def: IntegrationFieldDefO): unknown {
		return null
	},

	renderMocks(def: IntegrationFieldDefO): unknown {
		return this.renderDefault(def)
	},
})

export default IntegrationFieldRenderer
