import type { WidgetContent } from "@prismicio/types-internal/lib/documents/widgets"
import type {
	DocumentLink,
	ExternalLink,
	FileLink,
	ImageLink,
} from "@prismicio/types-internal/lib/documents/widgets/nestable/Link"
import type { SliceWidgetContent } from "@prismicio/types-internal/lib/documents/widgets/slices"

import type { AnyLinkDef, DocumentLinkDef, MediaLinkDef, SliceDefO, WebLinkDef, WidgetDefO } from "./ApiModel"
import type { Field, GroupOrField, Slice } from "./fetch"

export interface Renderer<D extends WidgetDefO, C extends WidgetContent, F extends Field | undefined = undefined> {
	renderV1(content: C, fetch?: F | undefined): unknown
	renderV2(definition: D, content: C, fetch?: F | undefined): unknown
	renderDefault(definition: D): unknown
	renderMocks(definition: D, content: C): unknown
}

export interface LinkRenderer<
	D extends MediaLinkDef | DocumentLinkDef | WebLinkDef,
	C extends DocumentLink | FileLink | ExternalLink | ImageLink,
	F extends Field | undefined = undefined,
> {
	renderV1(content: C, fetch?: F | undefined): unknown
	renderV2(definition: D | AnyLinkDef, content: C, fetch?: F | undefined): unknown
	renderMocks(definition: D | AnyLinkDef, content: C): unknown
}

export interface SliceRenderer<D extends SliceDefO, C extends SliceWidgetContent, F extends Slice | GroupOrField> {
	renderV1(content: C, fetch?: F | undefined): unknown
	renderV2(definition: D, content: C, fetch?: F | undefined): unknown
	renderDefault(definition: D): unknown
	renderMocks(definition: D, content: C): unknown
}
