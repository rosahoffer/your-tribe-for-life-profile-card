import type { Group } from "@prismicio/types-internal/lib/customtypes/widgets"
import { addType } from "@prismicio/types-internal/lib/validators/function"
import * as t from "io-ts"

import { fromSimpleField, SimpleFieldDef } from "./SimpleField"

export const GroupDefType = "groupDef"
export const GroupDef = addType(
	t.strict({
		name: t.string,
		fields: t.array(SimpleFieldDef),
	}),
	GroupDefType,
)

export type GroupDef = t.TypeOf<typeof GroupDef>
export type GroupDefO = t.OutputOf<typeof GroupDef>

export function fromGroup(key: string, model: Group): GroupDef {
	const fields = Object.entries(model.config?.fields || {}).map(([key, f]) => fromSimpleField(key, f))
	return {
		name: key,
		fields,
	}
}
