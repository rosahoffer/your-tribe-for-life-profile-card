import type { Image } from "@prismicio/types-internal/lib/customtypes/widgets/nestable"
import * as t from "io-ts"
import { mapOutput } from "io-ts-types/lib/mapOutput"

export const ImageDefType = "imageDef"
export const ImageDef = mapOutput(
	t.strict({
		image: t.string,
		config: t.strict({
			thumbnails: t.array(t.string),
		}),
	}),
	(o) => ({ name: o.image, config: o.config, __TYPE__: ImageDefType } as const),
)
export type ImageDef = t.TypeOf<typeof ImageDef>
export type ImageDefO = t.OutputOf<typeof ImageDef>

export function fromImage(key: string, def: Image): ImageDef {
	return {
		image: key,
		config: {
			thumbnails: def.config?.thumbnails?.map((t) => t.name) || [],
		},
	}
}
