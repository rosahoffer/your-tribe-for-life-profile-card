import type Link from "@prismicio/types-internal/lib/customtypes/widgets/nestable/Link"
import { addType } from "@prismicio/types-internal/lib/validators/function"
import * as t from "io-ts"

export const WebLinkDefType = "ConfigWebLinkDef"
export const WebLinkDef = addType(
	t.strict({
		select: t.literal("web"),
	}),
	WebLinkDefType,
)
export type WebLinkDef = t.OutputOf<typeof WebLinkDef>

export function fromWebLink(link: Link): WebLinkDef {
	if (!("web" === link.config?.select)) throw new Error('Invalid link type provided, should contain { select: "web" }')
	return WebLinkDef.encode({ select: "web" })
}

export function defaultWebLinkDef(): WebLinkDef {
	return WebLinkDef.encode({
		select: "web",
	})
}
