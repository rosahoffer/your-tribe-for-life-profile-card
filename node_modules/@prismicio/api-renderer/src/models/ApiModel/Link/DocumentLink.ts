import type Link from "@prismicio/types-internal/lib/customtypes/widgets/nestable/Link"
import { addType } from "@prismicio/types-internal/lib/validators/function"
import * as t from "io-ts"

export const DocumentLinkDefType = "ConfigDocumentLinkDef"
export const DocumentLinkDef = addType(
	t.strict({
		select: t.literal("document"),
		customtypes: t.readonlyArray(t.string),
	}),
	DocumentLinkDefType,
)
export type DocumentLinkDef = t.OutputOf<typeof DocumentLinkDef>

export function fromDocumentLink(link: Link): DocumentLinkDef {
	if (!("document" === link.config?.select))
		throw new Error('Invalid link type provided, should contain { select: "document" }')
	return DocumentLinkDef.encode({
		select: "document",
		customtypes: link.config.customtypes || [],
	})
}

export function defaultDocumentLinkDef(): DocumentLinkDef {
	return DocumentLinkDef.encode({
		select: "document",
		customtypes: [],
	})
}
