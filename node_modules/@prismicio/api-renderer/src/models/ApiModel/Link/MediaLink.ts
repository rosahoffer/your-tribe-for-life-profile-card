import type Link from "@prismicio/types-internal/lib/customtypes/widgets/nestable/Link"
import { addType } from "@prismicio/types-internal/lib/validators/function"
import * as t from "io-ts"

export const MediaLinkDefType = "ConfigMediaLinkDef"
export const MediaLinkDef = addType(
	t.strict({
		select: t.literal("media"),
	}),
	MediaLinkDefType,
)
export type MediaLinkDef = t.OutputOf<typeof MediaLinkDef>

export function fromMediaLink(link: Link): MediaLinkDef {
	if (!("media" === link.config?.select))
		throw new Error('Invalid link type provided, should contain { select: "media" }')
	return MediaLinkDef.encode({ select: "media" })
}

export function defaultMediaLinkDef(): MediaLinkDef {
	return MediaLinkDef.encode({
		select: "media",
	})
}
