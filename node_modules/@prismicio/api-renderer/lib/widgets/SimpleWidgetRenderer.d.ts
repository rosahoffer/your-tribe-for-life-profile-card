import type { SimpleWidgetContent } from "@prismicio/types-internal/lib/documents/widgets";
import type { RenderContext } from "../models";
import type { Renderer } from "../models";
import { SimpleFieldDefO } from "../models";
import { Field } from "../models/fetch";
declare const SimpleWidgetRenderer: (ctx: RenderContext) => Renderer<SimpleFieldDefO, SimpleWidgetContent, Field> & {
    renderObjectOfSimpleWidgetV1(content: Array<[string, SimpleWidgetContent]> | Record<string, SimpleWidgetContent>, fetch: Record<string, Field> | undefined): object;
    renderObjectOfSimpleWidgetV2(content: Array<[string, SimpleWidgetContent]> | Record<string, SimpleWidgetContent>, fetch: Record<string, Field> | undefined, fieldsDef: SimpleFieldDefO[], renderIfUndefined: {
        withFetch: "default" | "filter";
    }, renderIfNull: {
        default: "default" | "render" | "filter";
        withFetch: "default" | "filter";
        withFetchField: "default" | "render" | "filter";
    }): Record<string, unknown>;
    renderObjectOfSimpleWidgetMocks(content: Array<[string, SimpleWidgetContent]> | Record<string, SimpleWidgetContent>, fieldsDef: SimpleFieldDefO[]): Record<string, unknown>;
};
export default SimpleWidgetRenderer;
