"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromSlices = exports.SlicesDef = exports.SlicesDefType = void 0;
const tslib_1 = require("tslib");
const slices_1 = require("@prismicio/types-internal/lib/customtypes/widgets/slices");
const function_1 = require("@prismicio/types-internal/lib/validators/function");
const t = tslib_1.__importStar(require("io-ts"));
const Slice_1 = require("./Slice");
exports.SlicesDefType = "slicesDef";
exports.SlicesDef = (0, function_1.addType)(t.type({
    name: t.string,
    slices: t.array(Slice_1.SliceDef),
}), exports.SlicesDefType);
function fromSlices(key, model, sharedSlices) {
    var _a;
    return {
        name: key,
        slices: Object.entries(((_a = model.config) === null || _a === void 0 ? void 0 : _a.choices) || {})
            .reduce((acc, [key, slice]) => {
            switch (slice.type) {
                case slices_1.SlicesTypes.SharedSlice: {
                    const sharedSliceDef = sharedSlices[key];
                    if (!sharedSliceDef)
                        return acc;
                    return [...acc, (0, Slice_1.fromSlice)(key, sharedSliceDef)];
                }
                default:
                    return [...acc, (0, Slice_1.fromSlice)(key, slice)];
            }
        }, [])
            .filter((s) => s !== undefined),
    };
}
exports.fromSlices = fromSlices;
