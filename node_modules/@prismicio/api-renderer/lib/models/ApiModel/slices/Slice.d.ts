import { CompositeSlice, LegacySlice, SharedSlice } from "@prismicio/types-internal/lib/customtypes/widgets/slices";
import * as t from "io-ts";
export declare const SliceDef: t.UnionC<[t.Type<{
    name: string;
    widget: {
        booleanField: string;
        config: {
            default_value: boolean;
        };
    } | {
        color: string;
    } | {
        date: string;
    } | {
        embed: string;
    } | {
        geopoint: string;
    } | {
        image: string;
        config: {
            thumbnails: string[];
        };
    } | {
        integrationFields: string;
    } | {
        link: string;
        config: {
            select?: "any" | null | undefined;
        } | {
            select: "document";
            customtypes: readonly string[];
        } | {
            select: "media";
        } | {
            select: "web";
        };
    } | {
        number: string;
    } | {
        range: string;
    } | {
        select: string;
        config: {
            options: readonly string[];
        };
    } | {
        separator: string;
    } | {
        structuredtext: string;
    } | {
        text: string;
    } | {
        timestamp: string;
    } | {
        uid: string;
    } | {
        name: string;
        fields: ({
            booleanField: string;
            config: {
                default_value: boolean;
            };
        } | {
            color: string;
        } | {
            date: string;
        } | {
            embed: string;
        } | {
            geopoint: string;
        } | {
            image: string;
            config: {
                thumbnails: string[];
            };
        } | {
            integrationFields: string;
        } | {
            link: string;
            config: {
                select?: "any" | null | undefined;
            } | {
                select: "document";
                customtypes: readonly string[];
            } | {
                select: "media";
            } | {
                select: "web";
            };
        } | {
            number: string;
        } | {
            range: string;
        } | {
            select: string;
            config: {
                options: readonly string[];
            };
        } | {
            separator: string;
        } | {
            structuredtext: string;
        } | {
            text: string;
        } | {
            timestamp: string;
        } | {
            uid: string;
        })[];
    };
}, {
    name: string;
    widget: {
        readonly name: string;
        readonly __TYPE__: "booleanFieldDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "colorDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "dateDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "embedDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "geopointDef";
    } | {
        readonly name: string;
        readonly config: {
            thumbnails: string[];
        };
        readonly __TYPE__: "imageDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "integrationFieldDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "LinkDefType";
        readonly config: ({
            select?: "any" | null | undefined;
        } & {
            __TYPE__: "ConfigAnyLinkDef";
        }) | ({
            select: "document";
            customtypes: readonly string[];
        } & {
            __TYPE__: "ConfigDocumentLinkDef";
        }) | ({
            select: "media";
        } & {
            __TYPE__: "ConfigMediaLinkDef";
        }) | ({
            select: "web";
        } & {
            __TYPE__: "ConfigWebLinkDef";
        });
    } | {
        readonly name: string;
        readonly __TYPE__: "numberDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "RangeDef";
    } | {
        readonly name: string;
        readonly config: {
            options: readonly string[];
        };
        readonly __TYPE__: "selectDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "separatorDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "structuredTextDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "textDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "timestampDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "UIDDef";
    } | ({
        name: string;
        fields: ({
            readonly name: string;
            readonly __TYPE__: "booleanFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "colorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "dateDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "embedDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "geopointDef";
        } | {
            readonly name: string;
            readonly config: {
                thumbnails: string[];
            };
            readonly __TYPE__: "imageDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "integrationFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "LinkDefType";
            readonly config: ({
                select?: "any" | null | undefined;
            } & {
                __TYPE__: "ConfigAnyLinkDef";
            }) | ({
                select: "document";
                customtypes: readonly string[];
            } & {
                __TYPE__: "ConfigDocumentLinkDef";
            }) | ({
                select: "media";
            } & {
                __TYPE__: "ConfigMediaLinkDef";
            }) | ({
                select: "web";
            } & {
                __TYPE__: "ConfigWebLinkDef";
            });
        } | {
            readonly name: string;
            readonly __TYPE__: "numberDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "RangeDef";
        } | {
            readonly name: string;
            readonly config: {
                options: readonly string[];
            };
            readonly __TYPE__: "selectDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "separatorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "structuredTextDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "textDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "timestampDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "UIDDef";
        })[];
    } & {
        __TYPE__: "groupDef";
    });
} & {
    __TYPE__: "simpleSliceDef";
}, unknown>, t.Type<{
    name: string;
    variations: {
        id: string;
        primary: ({
            booleanField: string;
            config: {
                default_value: boolean;
            };
        } | {
            color: string;
        } | {
            date: string;
        } | {
            embed: string;
        } | {
            geopoint: string;
        } | {
            image: string;
            config: {
                thumbnails: string[];
            };
        } | {
            integrationFields: string;
        } | {
            link: string;
            config: {
                select?: "any" | null | undefined;
            } | {
                select: "document";
                customtypes: readonly string[];
            } | {
                select: "media";
            } | {
                select: "web";
            };
        } | {
            number: string;
        } | {
            range: string;
        } | {
            select: string;
            config: {
                options: readonly string[];
            };
        } | {
            separator: string;
        } | {
            structuredtext: string;
        } | {
            text: string;
        } | {
            timestamp: string;
        } | {
            uid: string;
        })[];
        items: ({
            booleanField: string;
            config: {
                default_value: boolean;
            };
        } | {
            color: string;
        } | {
            date: string;
        } | {
            embed: string;
        } | {
            geopoint: string;
        } | {
            image: string;
            config: {
                thumbnails: string[];
            };
        } | {
            integrationFields: string;
        } | {
            link: string;
            config: {
                select?: "any" | null | undefined;
            } | {
                select: "document";
                customtypes: readonly string[];
            } | {
                select: "media";
            } | {
                select: "web";
            };
        } | {
            number: string;
        } | {
            range: string;
        } | {
            select: string;
            config: {
                options: readonly string[];
            };
        } | {
            separator: string;
        } | {
            structuredtext: string;
        } | {
            text: string;
        } | {
            timestamp: string;
        } | {
            uid: string;
        })[];
        version: string;
    }[];
}, {
    name: string;
    variations: ({
        id: string;
        primary: ({
            readonly name: string;
            readonly __TYPE__: "booleanFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "colorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "dateDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "embedDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "geopointDef";
        } | {
            readonly name: string;
            readonly config: {
                thumbnails: string[];
            };
            readonly __TYPE__: "imageDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "integrationFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "LinkDefType";
            readonly config: ({
                select?: "any" | null | undefined;
            } & {
                __TYPE__: "ConfigAnyLinkDef";
            }) | ({
                select: "document";
                customtypes: readonly string[];
            } & {
                __TYPE__: "ConfigDocumentLinkDef";
            }) | ({
                select: "media";
            } & {
                __TYPE__: "ConfigMediaLinkDef";
            }) | ({
                select: "web";
            } & {
                __TYPE__: "ConfigWebLinkDef";
            });
        } | {
            readonly name: string;
            readonly __TYPE__: "numberDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "RangeDef";
        } | {
            readonly name: string;
            readonly config: {
                options: readonly string[];
            };
            readonly __TYPE__: "selectDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "separatorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "structuredTextDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "textDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "timestampDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "UIDDef";
        })[];
        items: ({
            readonly name: string;
            readonly __TYPE__: "booleanFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "colorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "dateDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "embedDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "geopointDef";
        } | {
            readonly name: string;
            readonly config: {
                thumbnails: string[];
            };
            readonly __TYPE__: "imageDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "integrationFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "LinkDefType";
            readonly config: ({
                select?: "any" | null | undefined;
            } & {
                __TYPE__: "ConfigAnyLinkDef";
            }) | ({
                select: "document";
                customtypes: readonly string[];
            } & {
                __TYPE__: "ConfigDocumentLinkDef";
            }) | ({
                select: "media";
            } & {
                __TYPE__: "ConfigMediaLinkDef";
            }) | ({
                select: "web";
            } & {
                __TYPE__: "ConfigWebLinkDef";
            });
        } | {
            readonly name: string;
            readonly __TYPE__: "numberDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "RangeDef";
        } | {
            readonly name: string;
            readonly config: {
                options: readonly string[];
            };
            readonly __TYPE__: "selectDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "separatorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "structuredTextDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "textDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "timestampDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "UIDDef";
        })[];
        version: string;
    } & {
        __TYPE__: "variationDef";
    })[];
} & {
    __TYPE__: "sharedSliceDef";
}, unknown>, t.Type<{
    name: string;
    primary: ({
        booleanField: string;
        config: {
            default_value: boolean;
        };
    } | {
        color: string;
    } | {
        date: string;
    } | {
        embed: string;
    } | {
        geopoint: string;
    } | {
        image: string;
        config: {
            thumbnails: string[];
        };
    } | {
        integrationFields: string;
    } | {
        link: string;
        config: {
            select?: "any" | null | undefined;
        } | {
            select: "document";
            customtypes: readonly string[];
        } | {
            select: "media";
        } | {
            select: "web";
        };
    } | {
        number: string;
    } | {
        range: string;
    } | {
        select: string;
        config: {
            options: readonly string[];
        };
    } | {
        separator: string;
    } | {
        structuredtext: string;
    } | {
        text: string;
    } | {
        timestamp: string;
    } | {
        uid: string;
    })[];
    items: {
        name: string;
        fields: ({
            booleanField: string;
            config: {
                default_value: boolean;
            };
        } | {
            color: string;
        } | {
            date: string;
        } | {
            embed: string;
        } | {
            geopoint: string;
        } | {
            image: string;
            config: {
                thumbnails: string[];
            };
        } | {
            integrationFields: string;
        } | {
            link: string;
            config: {
                select?: "any" | null | undefined;
            } | {
                select: "document";
                customtypes: readonly string[];
            } | {
                select: "media";
            } | {
                select: "web";
            };
        } | {
            number: string;
        } | {
            range: string;
        } | {
            select: string;
            config: {
                options: readonly string[];
            };
        } | {
            separator: string;
        } | {
            structuredtext: string;
        } | {
            text: string;
        } | {
            timestamp: string;
        } | {
            uid: string;
        })[];
    };
}, {
    name: string;
    primary: ({
        readonly name: string;
        readonly __TYPE__: "booleanFieldDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "colorDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "dateDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "embedDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "geopointDef";
    } | {
        readonly name: string;
        readonly config: {
            thumbnails: string[];
        };
        readonly __TYPE__: "imageDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "integrationFieldDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "LinkDefType";
        readonly config: ({
            select?: "any" | null | undefined;
        } & {
            __TYPE__: "ConfigAnyLinkDef";
        }) | ({
            select: "document";
            customtypes: readonly string[];
        } & {
            __TYPE__: "ConfigDocumentLinkDef";
        }) | ({
            select: "media";
        } & {
            __TYPE__: "ConfigMediaLinkDef";
        }) | ({
            select: "web";
        } & {
            __TYPE__: "ConfigWebLinkDef";
        });
    } | {
        readonly name: string;
        readonly __TYPE__: "numberDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "RangeDef";
    } | {
        readonly name: string;
        readonly config: {
            options: readonly string[];
        };
        readonly __TYPE__: "selectDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "separatorDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "structuredTextDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "textDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "timestampDef";
    } | {
        readonly name: string;
        readonly __TYPE__: "UIDDef";
    })[];
    items: {
        name: string;
        fields: ({
            readonly name: string;
            readonly __TYPE__: "booleanFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "colorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "dateDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "embedDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "geopointDef";
        } | {
            readonly name: string;
            readonly config: {
                thumbnails: string[];
            };
            readonly __TYPE__: "imageDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "integrationFieldDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "LinkDefType";
            readonly config: ({
                select?: "any" | null | undefined;
            } & {
                __TYPE__: "ConfigAnyLinkDef";
            }) | ({
                select: "document";
                customtypes: readonly string[];
            } & {
                __TYPE__: "ConfigDocumentLinkDef";
            }) | ({
                select: "media";
            } & {
                __TYPE__: "ConfigMediaLinkDef";
            }) | ({
                select: "web";
            } & {
                __TYPE__: "ConfigWebLinkDef";
            });
        } | {
            readonly name: string;
            readonly __TYPE__: "numberDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "RangeDef";
        } | {
            readonly name: string;
            readonly config: {
                options: readonly string[];
            };
            readonly __TYPE__: "selectDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "separatorDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "structuredTextDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "textDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "timestampDef";
        } | {
            readonly name: string;
            readonly __TYPE__: "UIDDef";
        })[];
    } & {
        __TYPE__: "groupDef";
    };
} & {
    __TYPE__: "compositeSliceDef";
}, unknown>]>;
export declare type SliceDef = t.TypeOf<typeof SliceDef>;
export declare type SliceDefO = t.OutputOf<typeof SliceDef>;
export declare function fromSlice(key: string, model: SharedSlice | CompositeSlice | LegacySlice): SliceDef;
